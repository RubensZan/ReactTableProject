[{"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js":"1","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js":"3","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js":"4","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js":"5","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js":"6","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js":"7","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js":"8","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js":"9","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx":"10","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx":"11","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx":"12","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx":"13","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx":"14","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx":"15","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx":"16","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx":"17","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\styles.js":"18","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\styles.js":"19","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onLoadPage\\index.jsx":"20","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onErrorPage\\index.jsx":"21","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\styles.js":"22"},{"size":526,"mtime":1629296997331,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":15207,"mtime":1631298788000,"results":"26","hashOfConfig":"24"},{"size":21086,"mtime":1628275098298,"results":"27","hashOfConfig":"24"},{"size":23367,"mtime":1628183123641,"results":"28","hashOfConfig":"24"},{"size":30761,"mtime":1628183108344,"results":"29","hashOfConfig":"24"},{"size":39041,"mtime":1628183114827,"results":"30","hashOfConfig":"24"},{"size":48402,"mtime":1628183126435,"results":"31","hashOfConfig":"24"},{"size":68803,"mtime":1629893870627,"results":"32","hashOfConfig":"24"},{"size":9487,"mtime":1631294039020,"results":"33","hashOfConfig":"24"},{"size":7396,"mtime":1631291984923,"results":"34","hashOfConfig":"24"},{"size":1981,"mtime":1629982729788,"results":"35","hashOfConfig":"24"},{"size":2201,"mtime":1630688532825,"results":"36","hashOfConfig":"24"},{"size":1652,"mtime":1629989414658,"results":"37","hashOfConfig":"24"},{"size":918,"mtime":1629291846344,"results":"38","hashOfConfig":"24"},{"size":4431,"mtime":1631293938356,"results":"39","hashOfConfig":"24"},{"size":1509,"mtime":1630349640149,"results":"40","hashOfConfig":"24"},{"size":371,"mtime":1630414395380,"results":"41","hashOfConfig":"24"},{"size":522,"mtime":1631292737778,"results":"42","hashOfConfig":"24"},{"size":560,"mtime":1631190584378,"results":"43","hashOfConfig":"24"},{"size":419,"mtime":1630701751542,"results":"44","hashOfConfig":"24"},{"size":322,"mtime":1631290743917,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1gw0wh5",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js",[],["94","95"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js",["96"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js",[],["97","98"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx",["99","100"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport CustomInput from '../customInput/index';\r\nimport CustomCloseButton from '../customCloseButton';\r\nimport { ControlButton } from './styles';\r\n\r\n/**\r\n * @file module:src/components/carModal\r\n * @param {array of data} carObject \r\n * @param {function} closeHandler \r\n * @param {function} saveChanges \r\n * @returns a car modal with the information from the clicked line user\r\n */\r\nexport default function ModalCar({ carObject, closeHandler, saveChanges, carsArrows }) {\r\n\r\n    console.log(\"MORE THAN ONE CAR?\", carsArrows);\r\n    console.log(\"Car Object:\", carObject);\r\n\r\n    const [carChanged, setChanges] = useState({\r\n        car_manufacturer: (carObject && carObject.manufacturer) ? carObject.manufacturer : \"\",\r\n        car_model: (carObject && carObject.model) ? carObject.model : \"\",\r\n        car_name: (carObject && carObject.carName) ? carObject.carName : \"\",\r\n        car_fuel: (carObject && carObject.fuel) ? carObject.fuel : \"\",\r\n        userID: (carObject && carObject.userID) ? carObject.userID : \"\"\r\n    })\r\n\r\n\r\n    const [canPrevious, setPreviousCar] = useState(\r\n        false\r\n    )\r\n\r\n    const [canForward, setForwardCar] = useState(\r\n        false\r\n    )\r\n\r\n    const [readOnly, setReadOnlyState] = useState(\r\n        true\r\n    )\r\n    const myRef = useRef();\r\n\r\n    function edit() {\r\n        setReadOnlyState(!readOnly);\r\n        // console.log(readOnly);\r\n    }\r\n    const closeListener = (e) => {\r\n        if (e.keyCode === 27)\r\n            closeHandler();\r\n\r\n        if (e.type === \"click\")\r\n            closeHandler();\r\n    }\r\n    // setting event listener to close modal in case of esc or outside click\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", closeListener);\r\n        window.addEventListener(\"click\", closeListener);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", closeListener);\r\n            window.removeEventListener(\"click\", closeListener);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div style={style.parentDiv} >\r\n            <div style={style.modalDiv} onClick={event => event.stopPropagation()} tabIndex=\"0\" ref={myRef}>\r\n                <div style={style.headerModal}>\r\n                    <h1 style={{ color: \"#ffffff\" }}>Carro</h1>\r\n                    <CustomCloseButton\r\n                        handleClick={closeHandler}\r\n                        bgColor=\"#4169E1\"\r\n                    />\r\n\r\n                    <ControlButton able={canPrevious} style={{ position: \"absolute\", top: \"5px\", left: \"5px\" }}>&lt;&lt;</ControlButton>\r\n                    <ControlButton able={canForward} style={{ position: \"absolute\", top: \"5px\", left: \"40px\" }}>&gt;&gt;</ControlButton>\r\n\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        autoFocus={true}\r\n                        labelName=\"Marca \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_manufacturer}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_manufacturer: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        labelName=\"Modelo \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_model}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_model: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        labelName=\"Nome \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_name}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_name: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        labelName=\"Combustível \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_fuel}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_fuel: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    {!readOnly ? <input type=\"submit\" value=\"Salvar\" onClick={() => saveChanges(carChanged)}\r\n                        style={{ ...style.headerButton, backgroundColor: \"#42ad55\" }} /> : \"\"}\r\n                    <button onClick={() => edit()}\r\n                        style={readOnly ? style.headerDefault : { ...style.headerButton, backgroundColor: \"#ff0000\" }}>\r\n                        {readOnly ? \"Editar\" : \"Cancelar\"}\r\n                    </button>\r\n                </div>\r\n                <p style={style.headerModalLine}></p>\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nconst style = {\r\n    parentDiv: {\r\n        backgroundColor: \"rgb(163, 163, 163,0.8)\",\r\n        position: \"fixed\",\r\n        zIndex: 10,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    modalDiv: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n        position: \"relative\"\r\n    },\r\n    headerModal: {\r\n        backgroundColor: \"#000080\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"20%\"\r\n    },\r\n    headerModalContent: {\r\n        height: \"20%\",\r\n        backgroundColor: \"#ffffff\"\r\n    },\r\n    headerModalLine: {\r\n        backgroundColor: \"#4169E1\",\r\n        width: \"100%\",\r\n        height: \"4px\",\r\n        marginTop: \"0px\"\r\n    },\r\n    headerButton: {\r\n        fontSize: \"20px\",\r\n        display: \"inline\",\r\n        height: \"50px\",\r\n        width: \"40%\",\r\n        margin: \"0 5%\",\r\n        backgroundColor: \"#ff7d7d\",\r\n        color: \"#ffffff\",\r\n        border: \"none\",\r\n        cursor: \"pointer\"\r\n    },\r\n    headerDefault: {\r\n        fontSize: \"20px\",\r\n        display: \"inline\",\r\n        height: \"50px\",\r\n        width: \"80%\",\r\n        margin: \"0 10%\",\r\n        backgroundColor: \"#191970\",\r\n        color: \"#ffffff\",\r\n        border: \"none\",\r\n        cursor: \"pointer\"\r\n    }\r\n};","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx",["101","102","103"],"import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp,faArrowRight} from '@fortawesome/free-solid-svg-icons'; \r\nimport ExpandedRowContent from '../expandedRowContent';\r\n\r\n/**\r\n * @file module:src/components/extendedTableRow/index.jsx  \r\n * @param {array} props.thisUserData - Array containing data from the user __currentAccess, currentAddress, currentJob, productsBuyed__\r\n * @param {array} props.fieldList - Array containing the list of boxes that can be expanded\r\n * @param {array} props.fieldValues - Array containing keys to access values from thisUserData\r\n * @param {string} props.expandedType - String containing the type of the box when expanded\r\n * @returns - extended row, when click in the button will show the content of the field name clicked \r\n */\r\nexport default function ExtendedTableRow(props){  \r\n    const [boxColapsed, setBoxColapsed] = useState(null); \r\n    /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~handleClick\r\n     * @summary - when the button is clicked, open only the clicked field in the device window \r\n     * @param {number} newIndex - When a box is clicked, the index of it´s box will be passed      \r\n     */\r\n    function handleClick(newIndex) {\r\n        let currentIndex = boxColapsed; \r\n        if (newIndex !== currentIndex)\r\n            currentIndex = newIndex; \r\n        else\r\n            currentIndex = null; \r\n        setBoxColapsed(currentIndex);\r\n    }\r\n    useEffect(()=>{\r\n    },[boxColapsed])\r\n /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~getExpandibleBoxes\r\n     * @summary - get the expandible box(es) according to the expanded type\r\n     * @return expansible boxes of expanded row\r\n     */\r\n    function getExpandibleBoxes(){\r\n        // not altering its values \r\n        // the keys of the fieldlist are the titles from the box(es)\r\n        let titles;      \r\n        let fieldList;   \r\n        let fieldValues; \r\n        if (props.expansible && props.expandedType === \"lines\" ){\r\n            titles = Object.keys(props.fieldList); \r\n            // fieldList = Object.values(props.fieldList);\r\n            // fieldValues= Object.values(props.fieldValues);\r\n            return(\r\n                titles.map((title,field)=>{\r\n                        return (\r\n                            <div key={\"BoxWrapper\"+title} style={style.boxWrapper}>\r\n                                <h1 style={style.extendedLineTitle}>{title}</h1>\r\n                                <button onClick={()=>handleClick(field)} style={style.boxButton}>\r\n                                    { (boxColapsed === field) ? \r\n                                        <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                                        : \r\n                                        <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                                    }\r\n                                </button>\r\n                                {(boxColapsed === field && typeof props.mountExpanded === \"function\") ?\r\n                                        props.mountExpanded(props.index, field)\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        );    \r\n                    })\r\n                )}\r\n\r\n                else if (typeof props.mountExpanded === \"function\")\r\n                    return props.mountExpanded(props.index)\r\n    };\r\n    \r\n    return (   \r\n        <div id=\"container\" style={style.container}>\r\n            {getExpandibleBoxes()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst style = {\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        flexDirection: \"row\"\r\n    },\r\n    boxWrapper:{\r\n        position: \"relative\",\r\n        backgroundColor: \"#8570fa\"\r\n    },\r\n    extendedLineTitle:{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\", \r\n        fontSize : \"18px\",\r\n        color: \"#fff\",\r\n        padding: \"16px 0\"\r\n    },\r\n    boxButton:{\r\n        border: \"none\",\r\n        textDecoration: \"none\",\r\n        cursor: \"pointer\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        left: \"10px\",\r\n        top: \"8px\"\r\n    }\r\n};\r\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onLoadPage\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onErrorPage\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\styles.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":18},{"ruleId":"104","replacedBy":"112"},{"ruleId":"106","replacedBy":"113"},{"ruleId":"108","severity":1,"message":"114","line":27,"column":25,"nodeType":"110","messageId":"111","endLine":27,"endColumn":39},{"ruleId":"108","severity":1,"message":"115","line":31,"column":24,"nodeType":"110","messageId":"111","endLine":31,"endColumn":37},{"ruleId":"108","severity":1,"message":"116","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":26},{"ruleId":"108","severity":1,"message":"117","line":40,"column":13,"nodeType":"110","messageId":"111","endLine":40,"endColumn":22},{"ruleId":"108","severity":1,"message":"118","line":41,"column":13,"nodeType":"110","messageId":"111","endLine":41,"endColumn":24},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"no-unused-vars","'UAParser' is defined but never used.","Identifier","unusedVar",["119"],["120"],"'setPreviousCar' is assigned a value but never used.","'setForwardCar' is assigned a value but never used.","'ExpandedRowContent' is defined but never used.","'fieldList' is defined but never used.","'fieldValues' is defined but never used.","no-global-assign","no-unsafe-negation"]