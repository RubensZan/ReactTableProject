[{"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js":"1","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js":"3","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js":"4","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js":"5","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js":"6","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js":"7","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js":"8","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js":"9","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx":"10","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx":"11","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx":"12","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx":"13","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx":"14","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx":"15","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx":"16","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx":"17"},{"size":526,"mtime":1629296997331,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":10212,"mtime":1629907707215,"results":"21","hashOfConfig":"19"},{"size":21086,"mtime":1628275098298,"results":"22","hashOfConfig":"19"},{"size":23367,"mtime":1628183123641,"results":"23","hashOfConfig":"19"},{"size":30761,"mtime":1628183108344,"results":"24","hashOfConfig":"19"},{"size":39041,"mtime":1628183114827,"results":"25","hashOfConfig":"19"},{"size":48402,"mtime":1628183126435,"results":"26","hashOfConfig":"19"},{"size":68803,"mtime":1629893870627,"results":"27","hashOfConfig":"19"},{"size":5717,"mtime":1629903441120,"results":"28","hashOfConfig":"19"},{"size":7170,"mtime":1629293118557,"results":"29","hashOfConfig":"19"},{"size":1974,"mtime":1629291636000,"results":"30","hashOfConfig":"19"},{"size":2245,"mtime":1629894753461,"results":"31","hashOfConfig":"19"},{"size":1652,"mtime":1629292316265,"results":"32","hashOfConfig":"19"},{"size":918,"mtime":1629291846344,"results":"33","hashOfConfig":"19"},{"size":4308,"mtime":1629895425709,"results":"34","hashOfConfig":"19"},{"size":1401,"mtime":1629722333369,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gw0wh5",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js",[],["74","75"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js",["76","77","78","79","80"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx",["81","82","83","84","85","86","87","88","89"],"import React, { Component, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle, faBan} from '@fortawesome/free-solid-svg-icons'; \r\n\r\nimport TableRow from '../tableRow';\r\nimport { faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\r\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\r\n\r\n\r\nclass CustomTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    };\r\n    gettabledatas() {\r\n        let rows = (typeof this.props.tableRowsValues === \"array\" ? this.props.tableRowsValues : Object.values(this.props.tableRowsValues));\r\n        let collumns = (typeof this.props.tableCollumn === \"array\" ? this.props.tableCollumn : Object.values(this.props.tableCollumn));\r\n        console.log(\"COLUNAS\",collumns);\r\n        return (\r\n            rows.map((row, i) => {\r\n                return (\r\n                    <TableRow\r\n                    mountExpanded = {this.props.mountExpanded ? this.props.mountExpanded : \"NOT DEFINED\"} \r\n                    expansible = {this.props.expansible}\r\n                    key={this.props.tableName+\"RowKey:\"+\"->\"+i}  \r\n                    index={row.user_id ? row.user_id : row.user_product_buyed_id }  \r\n                    userData={row} \r\n                    fieldList={this.props.fieldList}\r\n                    fieldValues={this.props.fieldValues}\r\n                    expandedType = {this.props.expandedType}\r\n                    >\r\n                        {collumns.map((collumn, j) => {\r\n                            let value = row[collumn.collumnValue]; \r\n                            if (collumn.valueFormatter && typeof collumn.valueFormatter === \"function\")\r\n                                value = collumn.valueFormatter(value,row);\r\n\r\n                                if (collumn.type === \"text\")\r\n                                    return (\r\n                                        \r\n                                        <td key={\"CollumnsKey:\"+row+value} \r\n                                        style={\r\n                                                { backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\", \r\n                                                paddingLeft: \"2%\", fontSize: \"12px\"}\r\n                                            }>\r\n                                            {value}\r\n                                        </td>\r\n                                    )\r\n                                else if (collumn.type === \"button\")\r\n                                            return(\r\n                                                <td key={\"CollumnsButtonKey:\"+row+value} \r\n                                                    style={\r\n                                                            { backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\", \r\n                                                            paddingLeft: \"2%\", fontSize: \"12px\"}\r\n                                                        }\r\n                                                    onClick={(event)=>event.stopPropagation()}\r\n                                                >   \r\n                                                    <button onClick={()=>collumn.handleClick(value)}>Visualizar</button>\r\n                                                </td>\r\n                                            )\r\n\r\n                                else if (collumn.type === \"icon\")\r\n                                            return(\r\n                                                <td key={\"CollumnsButtonKey:\"+row+value} \r\n                                                    style={\r\n                                                            { backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\", \r\n                                                            paddingLeft: \"2%\", fontSize: \"12px\"}\r\n                                                        }\r\n                                                >   {(i % 2 === 0) && (i % 3 === 0)? \r\n                                                    <FontAwesomeIcon icon={faBan}></FontAwesomeIcon>\r\n                                                    :\r\n                                                    <FontAwesomeIcon icon={faCheckCircle}></FontAwesomeIcon>\r\n                                                    }\r\n                                                    \r\n                                                </td>\r\n                                            )\r\n                            }\r\n                        )}\r\n                    </TableRow>\r\n                );\r\n            })\r\n        );\r\n    };\r\n\r\n    getHeader() {\r\n        let headerTitles = (typeof this.props.tableCollumn === \"array\" ? this.props.tableCollumn : Object.values(this.props.tableCollumn));\r\n        return (\r\n            headerTitles.map((headerTitle,i) => {\r\n                return (\r\n                    <th key={\"TableHeaderKey:\"+headerTitles.headerName+i}>\r\n                        {headerTitle.headerName}\r\n                    </th>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: \"100%\",align: \"center\", borderCollapse: \"collapse\"}}>\r\n                <thead style={{ backgroundColor: \"#ff7070\"}}>\r\n                    <tr>\r\n                        {this.getHeader()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.gettabledatas()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default CustomTable;\r\n\r\n\r\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx",["90"],"import React, { useEffect, useState } from 'react';\r\nimport CustomCloseButton from '../customCloseButton';\r\n\r\n/**\r\n * @file module:src/components/customAlerts/index.jsx\r\n * @param {string} props.textAlert - The message that will be showed \r\n * @param {boolean} props.successAlert - case the alert is a success alert or a failure alert\r\n * @returns customized alert \r\n */\r\nexport default function CustomAlerts(props){\r\n    const [fade, setFadeEffect] = useState(false);\r\n    \r\n    useEffect(()=>\r\n    {\r\n        if (!fade) \r\n        {\r\n            setFadeEffect(true); \r\n        }     \r\n    });\r\n\r\n    return (\r\n        <div style= { fade ? style.mountedAlert : style.unmountedAlert} >\r\n            <div style={{position: \"relative\"}}>\r\n                <p style={{fontSize: \"20px\",marginLeft:\"5%\"}} >\r\n                    {props && props.textAlert ? props.textAlert : \"no message!\"}\r\n                </p>\r\n                <CustomCloseButton\r\n                    bgColor= { props && props.successAlert ? \"#75eb95\" :  \"#fc8d8d\"}\r\n                />\r\n            </div>     \r\n        </div>\r\n    )\r\n} ;\r\n\r\nconst style = {\r\n    unmountedAlert : {\r\n        position:\"fixed\",\r\n        width: \"300px\",\r\n        height:\"100px\", \r\n        display: \"flex\",\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: \"#fffbe3\",\r\n        top:\"-250px\",\r\n        left:\"-250px\",\r\n        transition: \"all 0.5s\"\r\n    },\r\n    mountedAlert: {\r\n        position:\"fixed\",\r\n        width: \"300px\",\r\n        height:\"100px\", \r\n        display: \"flex\",\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: \"#6ecc7e\",\r\n        top:\"10px\",\r\n        left:\"10px\",\r\n        transition: \"all 0.5s\"\r\n    }, \r\n\r\n    failAlert: {\r\n        position:\"absolute\",\r\n        width: \"300px\",\r\n        height:\"100px\", \r\n        display: \"flex\",\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: \"#e32727\"\r\n    }\r\n}","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx",["91","92","93"],"import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp,faArrowRight} from '@fortawesome/free-solid-svg-icons'; \r\nimport ExpandedRowContent from '../expandedRowContent';\r\nimport CustomTable from '../customTable';\r\n\r\n/**\r\n * @file module:src/components/extendedTableRow/index.jsx  \r\n * @param {array} props.thisUserData - Array containing data from the user __currentAccess, currentAddress, currentJob, productsBuyed__\r\n * @param {array} props.fieldList - Array containing the list of boxes that can be expanded\r\n * @param {array} props.fieldValues - Array containing keys to access values from thisUserData\r\n * @param {string} props.expandedType - String containing the type of the box when expanded\r\n * @returns - extended row, when click in the button will show the content of the field name clicked \r\n */\r\nexport default function ExtendedTableRow(props){  \r\n    const [boxColapsed, setBoxColapsed] = useState(null); \r\n    \r\n\r\n    // console.log(\"PROPS\",props);\r\n    /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~handleClick\r\n     * @summary - when the button is clicked, open only the clicked field in the device window \r\n     */\r\n    function handleClick(newIndex) {\r\n        let currentIndex = boxColapsed; \r\n        if (newIndex !== currentIndex)\r\n            currentIndex = newIndex; \r\n        else\r\n            currentIndex = null; \r\n        setBoxColapsed(currentIndex);\r\n    }\r\n    useEffect(()=>{\r\n    },[boxColapsed])\r\n\r\n    function getExpandibleBoxes(){\r\n        \r\n        let titles = Object.keys(props.fieldList); \r\n        let fieldList = Object.values(props.fieldList);\r\n        let fieldValues = Object.values(props.fieldValues);\r\n\r\n\r\n        console.log(\"PROPS ::\",props);\r\n        return(\r\n            titles.map((title,index)=>{\r\n                    return (\r\n                        <div key={\"BoxWrapper\",title} style={style.boxWrapper}>\r\n                            <h1 style={style.extendedLineTitle}>{title}</h1>\r\n                            <button onClick={()=>handleClick(index)} style={style.boxButton}>\r\n                                { (boxColapsed === index) ? \r\n                                    <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                                    : \r\n                                    <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                                }\r\n                            </button>\r\n\r\n                            { props.expansible && props.expandedType === \"lines\" ? \r\n                                (boxColapsed === index) ? \r\n                                    <ExpandedRowContent\r\n                                        key= {\"ExpandedRowContent\",index}\r\n                                        fieldList = {fieldList[index]}\r\n                                        fieldValues = {props.thisUserData[fieldValues[index]]}\r\n                                    />\r\n                                :\r\n                                \"\"\r\n                                \r\n                            :   (boxColapsed === index) ? \r\n                                props.mountExpanded(props.index)\r\n                                :\r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    );    \r\n                })\r\n        )\r\n        \r\n    };\r\n    \r\n    return (   \r\n        <div id=\"container\" style={style.container}>\r\n            {getExpandibleBoxes()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst style = {\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        flexDirection: \"row\"\r\n    },\r\n    boxWrapper:{\r\n        position: \"relative\",\r\n        backgroundColor: \"#ffa3a3\"\r\n    },\r\n    extendedLineTitle:{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\", \r\n        fontSize : \"18px\",\r\n        color: \"#000000\",\r\n        padding: \"16px 0\"\r\n    },\r\n    boxButton:{\r\n        border: \"none\",\r\n        textDecoration: \"none\",\r\n        cursor: \"pointer\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        left: \"10px\",\r\n        top: \"8px\"\r\n    }\r\n};\r\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx",[],{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":1,"message":"99","line":3,"column":9,"nodeType":"100","messageId":"101","endLine":3,"endColumn":17},{"ruleId":"98","severity":1,"message":"102","line":5,"column":10,"nodeType":"100","messageId":"101","endLine":5,"endColumn":25},{"ruleId":"98","severity":1,"message":"103","line":6,"column":9,"nodeType":"100","messageId":"101","endLine":6,"endColumn":18},{"ruleId":"98","severity":1,"message":"104","line":6,"column":20,"nodeType":"100","messageId":"101","endLine":6,"endColumn":34},{"ruleId":"98","severity":1,"message":"105","line":9,"column":8,"nodeType":"100","messageId":"101","endLine":9,"endColumn":16},{"ruleId":"98","severity":1,"message":"106","line":1,"column":28,"nodeType":"100","messageId":"101","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"103","line":6,"column":10,"nodeType":"100","messageId":"101","endLine":6,"endColumn":19},{"ruleId":"98","severity":1,"message":"104","line":6,"column":21,"nodeType":"100","messageId":"101","endLine":6,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":15,"column":5,"nodeType":"109","messageId":"110","endLine":17,"endColumn":6},{"ruleId":"111","severity":1,"message":"112","line":19,"column":59,"nodeType":"113","messageId":"114","endLine":19,"endColumn":66},{"ruleId":"111","severity":1,"message":"112","line":20,"column":60,"nodeType":"113","messageId":"114","endLine":20,"endColumn":67},{"ruleId":"115","severity":1,"message":"116","line":28,"column":56,"nodeType":"117","messageId":"118","endLine":28,"endColumn":57},{"ruleId":"119","severity":1,"message":"120","line":35,"column":52,"nodeType":"121","messageId":"122","endLine":35,"endColumn":54},{"ruleId":"111","severity":1,"message":"112","line":88,"column":64,"nodeType":"113","messageId":"114","endLine":88,"endColumn":71},{"ruleId":"123","severity":1,"message":"124","line":13,"column":5,"nodeType":"100","endLine":13,"endColumn":14,"suggestions":"125"},{"ruleId":"98","severity":1,"message":"126","line":5,"column":8,"nodeType":"100","messageId":"101","endLine":5,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":46,"column":47,"nodeType":"129","messageId":"130","endLine":46,"endColumn":48},{"ruleId":"127","severity":1,"message":"128","line":59,"column":67,"nodeType":"129","messageId":"130","endLine":59,"endColumn":68},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'UAParser' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faUserAlt' is defined but never used.","'faUserAltSlash' is defined but never used.","'TableRow' is defined but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFadeEffect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [fade] as a second argument to the useEffect Hook.",["133"],"'CustomTable' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Add dependencies array: [fade]",{"range":"136","text":"137"},[591,591],", [fade]"]