[{"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js":"1","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js":"3","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js":"4","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js":"5","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js":"6","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js":"7","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js":"8","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js":"9","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx":"10","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx":"11","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx":"12","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx":"13","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx":"14","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx":"15","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx":"16","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx":"17","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\styles.js":"18","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\styles.js":"19","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onLoadPage\\index.jsx":"20","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onErrorPage\\index.jsx":"21","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\styles.js":"22","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\index.js":"23","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\home.js":"24","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\usersTable.js":"25","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\productsTable.js":"26","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\requestHistory.js":"27"},{"size":504,"mtime":1631715194939,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":121,"mtime":1631715642317,"results":"31","hashOfConfig":"29"},{"size":21086,"mtime":1628275098298,"results":"32","hashOfConfig":"29"},{"size":23367,"mtime":1628183123641,"results":"33","hashOfConfig":"29"},{"size":30761,"mtime":1628183108344,"results":"34","hashOfConfig":"29"},{"size":39041,"mtime":1628183114827,"results":"35","hashOfConfig":"29"},{"size":48402,"mtime":1628183126435,"results":"36","hashOfConfig":"29"},{"size":68803,"mtime":1629893870627,"results":"37","hashOfConfig":"29"},{"size":9525,"mtime":1631716951819,"results":"38","hashOfConfig":"29"},{"size":7707,"mtime":1631713448645,"results":"39","hashOfConfig":"29"},{"size":1981,"mtime":1629982729788,"results":"40","hashOfConfig":"29"},{"size":2201,"mtime":1630688532825,"results":"41","hashOfConfig":"29"},{"size":1652,"mtime":1629989414658,"results":"42","hashOfConfig":"29"},{"size":918,"mtime":1629291846344,"results":"43","hashOfConfig":"29"},{"size":4197,"mtime":1631640713649,"results":"44","hashOfConfig":"29"},{"size":1509,"mtime":1630349640149,"results":"45","hashOfConfig":"29"},{"size":371,"mtime":1630414395380,"results":"46","hashOfConfig":"29"},{"size":522,"mtime":1631292737778,"results":"47","hashOfConfig":"29"},{"size":560,"mtime":1631190584378,"results":"48","hashOfConfig":"29"},{"size":419,"mtime":1630701751542,"results":"49","hashOfConfig":"29"},{"size":322,"mtime":1631290743917,"results":"50","hashOfConfig":"29"},{"size":678,"mtime":1631723107527,"results":"51","hashOfConfig":"29"},{"size":3826,"mtime":1631733087378,"results":"52","hashOfConfig":"29"},{"size":12210,"mtime":1631728233690,"results":"53","hashOfConfig":"29"},{"size":5169,"mtime":1631722978825,"results":"54","hashOfConfig":"29"},{"size":4235,"mtime":1631729117462,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1gw0wh5",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js",[],["117","118"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js",[],["119","120"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx",[],["121","122"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onLoadPage\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onErrorPage\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\index.js",["123","124"],"//file: src/webpages/index.js\r\nimport React from 'react';\r\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\r\nimport Home from './home';\r\nimport UsersTable from './usersTable';\r\nimport ProductsTable from './productsTable';\r\nimport HistoryTable from './requestHistory';\r\nconst Views = () => {\r\n    return(\r\n        <Router>\r\n            <Route exact path=\"/\" component= {Home} />\r\n            <Route path = \"/products_table\" component = {ProductsTable} />\r\n            <Route path = \"/users_table\" component = {UsersTable} />\r\n            <Route path = \"/history_table\" component = {HistoryTable} />\r\n        </Router>\r\n    );\r\n};\r\nexport default Views;","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\home.js",["125","126"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\usersTable.js",["127"],"//Imports\r\nimport React, { Component } from 'react';\r\nimport { UAParser } from 'ua-parser-js';\r\nimport CustomTable from '../components/customTable';\r\nimport ModalCar from '../components/carModal';\r\nimport CustomAlerts from '../components/customAlerts';\r\nimport OnLoadPage from '../components/onLoadPage';\r\nimport OnErrorPage from '../components/onErrorPage';\r\n\r\nclass UsersTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // States\r\n    this.state = {\r\n      carsArrows: false,\r\n      isLoaded: false,\r\n      error: null,\r\n      usersData: null,\r\n      showModalCar: null,\r\n      showCustomAlert: false,\r\n      userTablefieldListConfig: {\r\n        \"Acesso\": [\r\n          { label: \"Rede\", fieldKey: \"businessTechnology\" },\r\n          { label: \"Login\", fieldKey: \"userLogin\" },\r\n          { label: \"SO\", fieldKey: \"userAgent\" },\r\n          { label: \"IP\", fieldKey: \"ipAddress\" }\r\n        ],\r\n        \"Endereço\": [\r\n          { label: \"País\", fieldKey: \"user_address_country\" },\r\n          { label: \"Estado\", fieldKey: \"user_address_state\" },\r\n          { label: \"Cidade\", fieldKey: \"user_address_city\" },\r\n          { label: \"Rua\", fieldKey: \"user_address_street_name\" },\r\n          { label: \"Endereço\", fieldKey: \"user_address_street_address\" }\r\n        ],\r\n        \"Emprego\": [\r\n          { label: \"Emprego\", fieldKey: \"user_job_title\" },\r\n          { label: \"Endereço do emprego\", fieldKey: \"user_job_address\" }\r\n        ],\r\n        \"Produto Comprado\": [\r\n          { label: \"Empresa\", fieldKey: \"user_product_buyed_company_name\" },\r\n          { label: \"Nome\", fieldKey: \"user_product_buyed_product_name\" },\r\n          { label: \"Material\", fieldKey: \"user_product_buyed_product_material\" },\r\n          { label: \"Descrição\", fieldKey: \"user_product_buyed_product_description\" }\r\n        ]\r\n      },\r\n      userTableCollumns: [\r\n        { headerName: \"Nomes\", collumnValue: \"user_first_name\", type: \"text\" },\r\n        { headerName: \"Data de Nascimento\", collumnValue: \"user_birth_date\", type: \"text\" },\r\n        { headerName: \"Genero\", collumnValue: \"user_gender\", type: \"text\" },\r\n        { headerName: \"Trabalho\", collumnValue: \"currentJob\", type: \"text\", valueFormatter: (currentJob) => currentJob.user_job_title },\r\n        { headerName: \"Salario\", collumnValue: \"currentJob\", type: \"text\", valueFormatter: (currentJob) => `${currentJob.user_job_salary_currency_symbol} ${currentJob.user_job_salary}` },\r\n        { headerName: \"Endereço\", collumnValue: \"currentAddress\", type: \"text\", valueFormatter: (currentAddress) => currentAddress.user_address_city },\r\n        { headerName: \"Carro\", collumnValue: \"currentCar\", type: \"button\", handleClick: this.showModal },\r\n        { headerName: \"Status\", collumnValue: \"\", type: \"icon\" }\r\n      ]\r\n    };\r\n\r\n\r\n    // Binds\r\n    this.setUsersChanges = this.setUsersChanges.bind(this)\r\n    this.showModal = this.showModal.bind(this)\r\n    this.closeModal = this.closeModal.bind(this)\r\n    this.showAlert = this.showAlert.bind(this)\r\n    this.mountExtendedUserTable = this.mountExtendedUserTable.bind(this);\r\n    this.getCollumnFormattedData = this.getCollumnFormattedData.bind(this);\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(\"http://localhost:3010/listUsersAndProducts\").then(res => res.json())\r\n    ]).then(([data]) => {\r\n      this.setState({\r\n        usersData: data.usersData,\r\n        isLoaded: true\r\n      });\r\n    }).catch(err => {\r\n      console.log(\"ERRO!! \", err);\r\n      this.setState({\r\n        error: true,\r\n        isLoaded: true\r\n      });\r\n    })\r\n  };\r\n  setUsersChanges(carChanged) {\r\n    const newList = this.state.allUsers;\r\n    const search = (element) => element.user_id === carChanged.userID;\r\n    let index = newList.findIndex(search);\r\n    newList[index].currentCar = carChanged;\r\n    this.setState({ allUsers: newList, showCustomAlert: true });\r\n    setTimeout(() => {\r\n      this.setState({ showCustomAlert: false });\r\n    }, 5000)\r\n    this.closeModal();\r\n  };\r\n\r\n  /**\r\n   * @function getCollumnFormattedData\r\n   * @summary this function will format the data in an row and return the data formatted\r\n   * @param {Object} row - Object that contains the fieldvalues inside it\r\n   * @param {string} fieldName - fieldName is object inside the row that will be traveled\r\n   * @param {string} fieldKey - fieldKeys are the fields that are supposed to be returned \r\n   * @returns{string} the formatted data\r\n   */\r\n  getCollumnFormattedData(row, fieldName, fieldKey) {\r\n    // console.log(row);\r\n    let allDataReturn = [];\r\n    let rowData = row[fieldName];\r\n    for (let i = 0; i < rowData.length; i++) {\r\n      let fieldValue = rowData[i];\r\n      if (fieldValue[fieldKey])\r\n        allDataReturn += fieldValue[fieldKey] + \" | \";\r\n    }\r\n    if (typeof allDataReturn === \"string\")\r\n      allDataReturn = allDataReturn.substring(0, allDataReturn.length - 3);\r\n    return allDataReturn;\r\n  }\r\n\r\n  // receiving user id\r\n  showModal(dataId) {\r\n    console.log(\"DATA ID : \", dataId);\r\n    // console.log(\"car from user\",this.state.usersCarsData[dataId]);\r\n    let carObject = this.state.usersData[dataId].cars;\r\n    console.log(\"CAR OBJ\", carObject);\r\n    // if exist a first car\r\n    if (carObject[0].carName) {\r\n\r\n      if (carObject.length < 2)\r\n        this.setState({\r\n          showModalCar: carObject,\r\n          carsArrows: false\r\n        })\r\n      else\r\n        this.setState({\r\n          showModalCar: carObject,\r\n          carsArrows: true\r\n        })\r\n    }\r\n    else\r\n      alert(\"User has no car!\");\r\n\r\n  };\r\n\r\n  closeModal() {\r\n    this.setState({\r\n      showModalCar: null\r\n    })\r\n  };\r\n\r\n  showAlert() {\r\n    this.setState({\r\n      showCustomAlert: true\r\n    })\r\n  };\r\n\r\n\r\n  /**\r\n   * @function mountExtendedUserTable\r\n   * @summary function to mount the extended user table row when clicked in a box extended\r\n   * @param {integer} userId - id from the user of the row clicked \r\n   * @param {integer} rowId  - id from the extended row clicked \r\n   * @returns{div} - div with the extended box clicked\r\n   */\r\n  mountExtendedUserTable(userId, rowId) {\r\n    // Access\r\n    if (rowId === 0) {\r\n      return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", margin: \"0 2%\" }}>\r\n          <p> <strong>Login:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"access\", \"userLogin\")} </p>\r\n          <p> <strong>Bussiness Tech:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"access\", \"businessTechnology\")} </p>\r\n          <p> <strong>Ip:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"access\", \"ipAddress\")} </p>\r\n        </div>\r\n      )\r\n    }\r\n    // Address\r\n    else if (rowId === 1) {\r\n      return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", margin: \"0 2%\" }}>\r\n          <p> <strong>Estado:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"address\", \"state\")} </p>\r\n          <p> <strong>Cidade:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"address\", \"city\")} </p>\r\n          <p> <strong>Endereço:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"address\", \"streetAddress\")} </p>\r\n        </div>\r\n      )\r\n    }\r\n    // Job\r\n    else if (rowId === 2) {\r\n      return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", margin: \"0 2%\" }}>\r\n          <p> <strong>Cidade:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"jobs\", \"jobTitle\")} </p>\r\n          <p> <strong>Salário:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"jobs\", \"salary\")} </p>\r\n          <p> <strong>Endereço:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"jobs\", \"jobAddress\")} </p>\r\n        </div>\r\n      )\r\n    }\r\n    // Product Buyed\r\n    else if (rowId === 3) {\r\n      return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", margin: \"0 2%\" }}>\r\n          <p> <strong>Produto:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"products\", \"productName\")} </p>\r\n          <p> <strong>Preço:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"products\", \"price\")} </p>\r\n          <p> <strong>Descrição:</strong>{this.getCollumnFormattedData(this.state.usersData[userId], \"products\", \"description\")} </p>\r\n        </div>\r\n      )\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n    console.log(\"user data\", this.state.usersData);\r\n    return (\r\n      <>\r\n\r\n        {this.state.isLoaded ?\r\n          !this.state.error ?\r\n            <div style={{ height: \"100vh\" }}>\r\n              {this.state.showCustomAlert ?\r\n                <CustomAlerts\r\n                  textAlert=\"Carro foi alterado com sucesso! \"\r\n                  successAlert={true}\r\n                  alertObject={\r\n                    this.state.showCustomAlert\r\n                  }\r\n                  showCustomAlert={\r\n                    this.showAlert\r\n                  }\r\n                  closeTime={4000}\r\n                />\r\n                :\r\n                null\r\n              }\r\n              {this.state.showModalCar ?\r\n                <ModalCar\r\n                  carsList={\r\n                    this.state.showModalCar\r\n                  }\r\n                  closeHandler={\r\n                    this.closeModal\r\n                  }\r\n                  saveChanges={\r\n                    this.setUsersChanges\r\n                  }\r\n                  carsArrows={\r\n                    this.state.carsArrows\r\n                  }\r\n                />\r\n                :\r\n                null\r\n              }\r\n\r\n                <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\r\n                  Tabela de Usuários\r\n                </h1>\r\n                <CustomTable\r\n                  expansible={true}\r\n                  key=\"UserTable\"\r\n                  tableName=\"userTable\"\r\n                  tableCollumn={[\r\n                    { headerName: \"Nomes\", collumnValue: \"userName\", type: \"text\" },\r\n                    { headerName: \"Data de Nascimento\", collumnValue: \"userBirthDate\", type: \"text\" },\r\n                    { headerName: \"Profissão\", collumnValue: \"jobs\", type: \"text\", valueFormatter: this.getCollumnFormattedData, fieldName: \"jobs\", fieldKey: \"jobTitle\" },\r\n                    { headerName: \"Salário\", collumnValue: \"jobs\", type: \"text\", valueFormatter: this.getCollumnFormattedData, fieldName: \"jobs\", fieldKey: \"salary\" },\r\n                    { headerName: \"Carro\", collumnValue: \"carName\", type: \"button\", handleClick: this.showModal }\r\n\r\n\r\n                    // {headerName: \"Trabalho\",collumnValue: \"currentJob\", type: \"text\",valueFormatter: (currentJob)=> currentJob.user_job_title},\r\n                    // {headerName: \"Salario\",collumnValue: \"currentJob\",type: \"text\",valueFormatter: (currentJob)=>`${currentJob.user_job_salary_currency_symbol} ${currentJob.user_job_salary}`},\r\n                    // {headerName: \"Endereço\",collumnValue: \"currentAddress\",type: \"text\",valueFormatter: (currentAddress)=> currentAddress.user_address_city},\r\n                    // {headerName: \"Carro\",collumnValue: \"currentCar\",type: \"button\",handleClick: this.showModal}\r\n                  ]}\r\n                  tableRowsValues={this.state.usersData}\r\n                  fieldList={\r\n                    this.state.userTablefieldListConfig\r\n                  }\r\n                  fieldValues={{ \"Acesso\": 0, \"Endereço\": 1, \"Emprego\": 2, \"Produto Comprado\": 3 }}\r\n                  expandedType=\"lines\"\r\n                  mountExpanded={this.mountExtendedUserTable}\r\n                />\r\n              \r\n            </div> :\r\n            <OnErrorPage />\r\n          :\r\n          <div style={{ height: \"100vh\" }}>\r\n              <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\r\n                Tabela de Usuários\r\n              </h1>\r\n              <OnLoadPage />\r\n          </div>\r\n        }\r\n      </>\r\n    )\r\n  };\r\n}\r\n\r\nexport default UsersTable;","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\productsTable.js",["128","129"],"//Imports\r\nimport React, { Component } from 'react';\r\nimport { UAParser } from 'ua-parser-js';\r\nimport CustomTable from '../components/customTable';\r\nimport CustomAlerts from '../components/customAlerts';\r\nimport OnLoadPage from '../components/onLoadPage';\r\nimport OnErrorPage from '../components/onErrorPage';\r\n\r\n\r\nclass ProductsTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // States\r\n    this.state = {\r\n      isLoaded: false,\r\n      error: null,\r\n      usersData: null,\r\n      productsData: null,\r\n      showCustomAlert: false,\r\n      productTableCollumns: [\r\n        { headerName: \"Produto\", collumnValue: \"productName\", type: \"text\" },\r\n        { headerName: \"Companhia\", collumnValue: \"companyName\", type: \"text\" },\r\n        { headerName: \"Material\", collumnValue: \"material\", type: \"text\" },\r\n        { headerName: \"Departamento\", collumnValue: \"buyedCommerceDepartment\", type: \"text\" },\r\n        { headerName: \"Preço\", collumnValue: \"price\", type: \"text\" }\r\n      ]\r\n    };\r\n\r\n\r\n    // Binds\r\n    this.showAlert = this.showAlert.bind(this)\r\n    this.mountExtendedProductTable = this.mountExtendedProductTable.bind(this);\r\n    this.getCollumnFormattedData = this.getCollumnFormattedData.bind(this);\r\n\r\n  };\r\n\r\n  componentDidMount() {\r\n    Promise.all([\r\n      fetch(\"http://localhost:3010/listUsersAndProducts\").then(res => res.json())\r\n    ]).then(([data]) => {\r\n      this.setState({\r\n        productsData: data.productsData,\r\n        isLoaded: true\r\n      });\r\n    }).catch(err => {\r\n      console.log(\"ERRO!! \", err);\r\n      this.setState({\r\n        error: true,\r\n        isLoaded: true\r\n      });\r\n    })\r\n  };\r\n\r\n  /**\r\n   * @function getCollumnFormattedData\r\n   * @summary this function will format the data in an row and return the data formatted\r\n   * @param {Object} row - Object that contains the fieldvalues inside it\r\n   * @param {string} fieldName - fieldName is object inside the row that will be traveled\r\n   * @param {string} fieldKey - fieldKeys are the fields that are supposed to be returned \r\n   * @returns{string} the formatted data\r\n   */\r\n  getCollumnFormattedData(row, fieldName, fieldKey) {\r\n    // console.log(row);\r\n    let allDataReturn = [];\r\n    let rowData = row[fieldName];\r\n    for (let i = 0; i < rowData.length; i++) {\r\n      let fieldValue = rowData[i];\r\n      if (fieldValue[fieldKey])\r\n        allDataReturn += fieldValue[fieldKey] + \" | \";\r\n    }\r\n    if (typeof allDataReturn === \"string\")\r\n      allDataReturn = allDataReturn.substring(0, allDataReturn.length - 3);\r\n    return allDataReturn;\r\n  }\r\n\r\n  showAlert() {\r\n    this.setState({\r\n      showCustomAlert: true\r\n    })\r\n  };\r\n\r\n  /**\r\n   * @function mountExtendedProductTable\r\n   * @summary function that will mount the table with the consumer from the product clicked table\r\n   * @param {integer} productId - id from the row clicked\r\n   * @returns \r\n   */\r\n  mountExtendedProductTable(productId) {\r\n    // let consumer = this.consumerControll[productId] || {};\r\n    let consumers = this.state.productsData[productId].consumers;\r\n    if (consumers && consumers[0].consumerName)\r\n      return (\r\n        <div style={{ border: \"10px solid #cfc7ff\" }}>\r\n          <CustomTable\r\n            expansible={false}\r\n            key=\"ExtendedProductTable\"\r\n            tableName=\"ExtendedProductTable\"\r\n            tableCollumn={[\r\n              { headerName: \"Nomes\", collumnValue: \"consumerName\", type: \"text\" },\r\n              { headerName: \"Data de Nascimento\", collumnValue: \"consumerBirthDate\", type: \"text\" }\r\n            ]}\r\n            tableRowsValues={consumers}\r\n          />\r\n        </div>\r\n      )\r\n    return (\r\n      <div style={{ border: \"10px solid #cfc7ff\" }}>\r\n        <h2 style={{ fontSize: \"20px\", color: \"#fff\", display: \"flex\", textAlign: \"center\", justifyContent: \"center\", fontWeight: \"bold\" }}>\r\n          Sem consumidores!\r\n        </h2>\r\n      </div>\r\n    )\r\n  };\r\n\r\n  render() {\r\n    console.log(\"products data\", this.state.productsData);\r\n    return (\r\n      <>\r\n\r\n        {this.state.isLoaded ?\r\n          !this.state.error ?\r\n              <div style={{ height: \"100vh\" }}>\r\n                <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\r\n                  Tabela de Produtos\r\n                </h1>\r\n                <CustomTable\r\n                  expansible={true}\r\n                  key=\"ProductTable\"\r\n                  tableName=\"productTable\"\r\n                  tableCollumn={this.state.productTableCollumns}\r\n                  tableRowsValues={this.state.productsData}\r\n                  expandedType=\"table\"\r\n                  mountExpanded={this.mountExtendedProductTable}\r\n                />\r\n              </div>:\r\n            <OnErrorPage />\r\n          :\r\n          <div style={{ height: \"100vh\"}}>\r\n            <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\r\n              Tabela de Produtos\r\n            </h1>\r\n            <OnLoadPage />\r\n          </div>\r\n        }\r\n      </>\r\n    )\r\n  };\r\n}\r\n\r\nexport default ProductsTable;","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\views\\requestHistory.js",["130","131"],"//Imports\r\nimport React, { Component } from 'react';\r\nimport CustomTable from '../components/customTable';\r\nimport CustomAlerts from '../components/customAlerts';\r\nimport OnLoadPage from '../components/onLoadPage';\r\nimport OnErrorPage from '../components/onErrorPage';\r\n\r\nexport default class HistoryTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // States\r\n        this.state = {\r\n            isLoaded: false,\r\n            error: null,\r\n            historyData: null,\r\n            showCustomAlert: false,\r\n            historyDataCollumns: [\r\n                { headerName: \"Ip\", collumnValue: \"userIp\", type: \"text\" },\r\n                { headerName: \"User Agent\", collumnValue: \"userAgent\", type: \"text\" },\r\n                { headerName: \"Data de inclusão\", collumnValue: \"inclusionDate\", type: \"text\" },\r\n                { headerName: \"Página acessada\", collumnValue: \"accessPath\", type: \"text\" }\r\n            ]\r\n        };\r\n\r\n\r\n        // Binds\r\n        this.showAlert = this.showAlert.bind(this)\r\n        this.getCollumnFormattedData = this.getCollumnFormattedData.bind(this);\r\n\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(\"http://localhost:3010/listRequisitionHistory\").then(res => res.json())\r\n        ]).then(([data]) => {\r\n            this.setState({\r\n                historyData: data,\r\n                isLoaded: true\r\n            });\r\n        }).catch(err => {\r\n            console.log(\"ERRO!! \", err);\r\n            this.setState({\r\n                error: true,\r\n                isLoaded: true\r\n            });\r\n        })\r\n    };\r\n\r\n    /**\r\n     * @function getCollumnFormattedData\r\n     * @summary this function will format the data in an row and return the data formatted\r\n     * @param {Object} row - Object that contains the fieldvalues inside it\r\n     * @param {string} fieldName - fieldName is object inside the row that will be traveled\r\n     * @param {string} fieldKey - fieldKeys are the fields that are supposed to be returned \r\n     * @returns{string} the formatted data\r\n     */\r\n    getCollumnFormattedData(row, fieldName, fieldKey) {\r\n        // console.log(row);\r\n        let allDataReturn = [];\r\n        let rowData = row[fieldName];\r\n        for (let i = 0; i < rowData.length; i++) {\r\n            let fieldValue = rowData[i];\r\n            if (fieldValue[fieldKey])\r\n                allDataReturn += fieldValue[fieldKey] + \" | \";\r\n        }\r\n        if (typeof allDataReturn === \"string\")\r\n            allDataReturn = allDataReturn.substring(0, allDataReturn.length - 3);\r\n        return allDataReturn;\r\n    }\r\n\r\n    showAlert() {\r\n        this.setState({\r\n            showCustomAlert: true\r\n        })\r\n    };\r\n\r\n\r\n\r\n    render() {\r\n        console.log(\"history data\", this.state.historyData);\r\n        return (\r\n            <>\r\n                {this.state.isLoaded ?\r\n                    !this.state.error ?\r\n                        <div style={{ height: \"100vh\" }}>\r\n                            <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\r\n                                Tabela de Histórico\r\n                            </h1>\r\n                            <CustomTable\r\n                                expansible={true}\r\n                                key=\"historyTable\"\r\n                                tableName=\"historyTable\"\r\n                                tableCollumn={this.state.historyDataCollumns}\r\n                                tableRowsValues={this.state.historyData}\r\n                                expandedType=\"table\"\r\n                                expansible={false}\r\n                            />\r\n                        </div> :\r\n                        <OnErrorPage />\r\n                    :\r\n                    <div style={{ height: \"100vh\" }}>\r\n                        <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\r\n                            Tabela de Histórico\r\n                        </h1>\r\n                        <OnLoadPage />\r\n                    </div>\r\n                }\r\n            </>\r\n        )\r\n    };\r\n}\r\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"132","replacedBy":"136"},{"ruleId":"134","replacedBy":"137"},{"ruleId":"132","replacedBy":"138"},{"ruleId":"134","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":3,"column":33,"nodeType":"142","messageId":"143","endLine":3,"endColumn":39},{"ruleId":"140","severity":1,"message":"144","line":3,"column":46,"nodeType":"142","messageId":"143","endLine":3,"endColumn":50},{"ruleId":"140","severity":1,"message":"145","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},{"ruleId":"140","severity":1,"message":"146","line":1,"column":38,"nodeType":"142","messageId":"143","endLine":1,"endColumn":44},{"ruleId":"140","severity":1,"message":"147","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":18},{"ruleId":"140","severity":1,"message":"147","line":3,"column":10,"nodeType":"142","messageId":"143","endLine":3,"endColumn":18},{"ruleId":"140","severity":1,"message":"148","line":5,"column":8,"nodeType":"142","messageId":"143","endLine":5,"endColumn":20},{"ruleId":"140","severity":1,"message":"148","line":4,"column":8,"nodeType":"142","messageId":"143","endLine":4,"endColumn":20},{"ruleId":"149","severity":1,"message":"150","line":97,"column":33,"nodeType":"151","messageId":"152","endLine":97,"endColumn":51},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],["153"],["154"],["153"],["154"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'UAParser' is defined but never used.","'CustomAlerts' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","no-global-assign","no-unsafe-negation"]