[{"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js":"1","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js":"3","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js":"4","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js":"5","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js":"6","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js":"7","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js":"8","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js":"9","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx":"10","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx":"11","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx":"12","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx":"13","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx":"14","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx":"15","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx":"16","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx":"17"},{"size":526,"mtime":1629296997331,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"19"},{"size":10323,"mtime":1629897431235,"results":"21","hashOfConfig":"19"},{"size":21086,"mtime":1628275098298,"results":"22","hashOfConfig":"19"},{"size":23367,"mtime":1628183123641,"results":"23","hashOfConfig":"19"},{"size":30761,"mtime":1628183108344,"results":"24","hashOfConfig":"19"},{"size":39041,"mtime":1628183114827,"results":"25","hashOfConfig":"19"},{"size":48402,"mtime":1628183126435,"results":"26","hashOfConfig":"19"},{"size":68803,"mtime":1629893870627,"results":"27","hashOfConfig":"19"},{"size":3455,"mtime":1629899037898,"results":"28","hashOfConfig":"19"},{"size":7170,"mtime":1629293118557,"results":"29","hashOfConfig":"19"},{"size":1974,"mtime":1629291636000,"results":"30","hashOfConfig":"19"},{"size":2245,"mtime":1629894753461,"results":"31","hashOfConfig":"19"},{"size":1652,"mtime":1629292316265,"results":"32","hashOfConfig":"19"},{"size":918,"mtime":1629291846344,"results":"33","hashOfConfig":"19"},{"size":4308,"mtime":1629895425709,"results":"34","hashOfConfig":"19"},{"size":1401,"mtime":1629722333369,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1gw0wh5",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js",[],["74","75"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js",["76","77","78","79","80","81","82"],"//Imports\nimport React,{Component} from 'react';\nimport {UAParser} from 'ua-parser-js'; \nimport CustomTable from './components/customTable';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons'; \nimport ModalCar from './components/carModal';   \nimport CustomAlerts from './components/customAlerts';\nimport TableRow from './components/tableRow'; \nimport data from './user/users.js';\nimport job from './user/users_job.js';\nimport address from './user/users_address.js';\nimport cars from './user/users_cars.js';\nimport access from './user/users_access.js';\nimport products from './user/users_products_buyed.js';\n\nclass ContainerTable extends Component{\n  constructor(props){ \n    super(props);\n      this.myProductsList = Object.values(products); \n\n      this.myUserList = data.map(user=>{\n        const myUser = user;  \n        if (job[myUser.user_job_id] )\n          myUser.currentJob = job[myUser.user_job_id]; \n        else \n          myUser.currentJob = {}; \n        \n        if (address[myUser.user_address_id] )\n          myUser.currentAddress= address[myUser.user_address_id]; \n        else \n          myUser.currentAddress = {}; \n        \n        if (cars[myUser.user_car_id] ){\n          myUser.currentCar = cars[myUser.user_car_id]; \n          myUser.currentCar = {...myUser.currentCar,userID: myUser.user_id}\n        }\n        else \n          myUser.currentCar = {}; \n        \n        if (access[myUser.user_access_id] )\n          myUser.currentAccess = access[myUser.user_access_id]; \n        else \n          myUser.currentAccess = {}; \n        \n        if (products[myUser.user_product_buyed_id] )\n          myUser.productsBuyed = products[myUser.user_product_buyed_id]; \n        else \n          myUser.productsBuyed = {};  \n        \n        // console.log(\"COMPROU:\",myUser.user_product_buyed_id);\n        // console.log(this.myProductsList.filter((product)=>product.user_product_buyed_id === myUser.user_product_buyed_id));\n        \n        \n        return myUser;\n      });\n\n    // States\n    this.state = {\n      showModalCar : null,\n      allUsers : this.myUserList,\n      showCustomAlert: false\n    }; \n    \n\n    // Binds\n    this.setUsersChanges = this.setUsersChanges.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.defaultAlert = this.defaultAlert.bind(this)\n    this.showAlert = this.showAlert.bind(this)\n    this.mountExtendedProductTable = this.mountExtendedProductTable.bind(this); \n  };\n\n  //Functions\n  setUsersChanges (carChanged){\n    const newList = this.state.allUsers ;  \n    const search = (element) =>  element.user_id === carChanged.userID; \n    let index = newList.findIndex(search);\n    newList[index].currentCar = carChanged; \n    this.setState({allUsers: newList, showCustomAlert: true}); \n    setTimeout(()=>{\n      this.setState({showCustomAlert: false}); \n    },5000) \n    this.closeModal();\n  };\n\n  showModal(carObject){\n    console.log(\"SHOW MODAL : \",carObject);\n    this.setState({\n      showModalCar: carObject\n      })\n  };\n\n  closeModal(){\n    this.setState({\n      showModalCar: null\n    })\n  };\n\n  defaultAlert (alertObject)\n  {\n    this.setState({\n      showCustomAlert: false  \n    })\n  }; \n\n  showAlert(){\n    this.setState({\n      showCustomAlert: true\n    })\n  };\n\n  // Function that will mount the expanded table when called \n  mountExtendedProductTable(productId){\n    // will return the user that buyed the product\n    console.log(\"FUI CHAMADA\",productId);\n    console.log(\"USERLIST\",this.myUserList);\n    let consumer = this.myUserList.filter(\n      (user)=>user.productsBuyed.user_product_buyed_id === productId);\n      console.log(\"CONSUMERS\",consumer);\n      if (consumer.length > 0)\n        return(\n          <div style={{border: \"10px solid #ff5252\"}}>\n            <CustomTable\n                expansible = {false}\n                key=\"ExtendedProductTable\"\n                tableName=\"ExtendedProductTable\"\n                tableCollumn = {[\n                  {headerName: \"Nomes\",collumnValue: \"user_first_name\"},\n                  {headerName: \"Data de Nascimento\",collumnValue: \"user_birth_date\"},\n                  {headerName: \"Trabalho\",collumnValue: \"currentJob\",valueFormatter: (currentJob)=> currentJob.user_job_title},\n                  {headerName: \"Salario\",collumnValue: \"currentJob\",valueFormatter: (currentJob)=>`${currentJob.user_job_salary_currency_symbol} ${currentJob.user_job_salary}`},\n                  {headerName: \"Endereço\",collumnValue: \"currentAddress\",valueFormatter: (currentAddress)=> currentAddress.user_address_city}\n                ]}\n                tableRowsValues = {consumer}\n            />\n          </div>\n        )\n      return(\n        <div style={{border: \"10px solid #ffa200\"}}>\n          <p style={{fontSize: \"20px\",display: \"flex\", textAlign: \"center\", justifyContent: \"center\", fontWeight: \"bold\"}}>Sem consumidores</p>\n        </div>\n      ) \n  };\n\n  // getuserdatas(){\n  //   return (\n  //     this.myUserList.map((user,i)=>\n  //       {return ( \n  //         <TableRow\n  //           key={\"user key:\",user.user_id}  \n  //           index={i}  \n  //           userData={this.myUserList}    \n  //         > \n  //           <td key={\"TableRowCollumnKey:Name\",user} >{user.user_first_name}</td> \n  //           <td key={\"TableRowCollumnKey:BirthDate\",user}>{user.user_birth_date}</td>\n  //           <td key={\"TableRowCollumnKey:Gender\",user}>{user.user_gender}</td>\n  //           <td key={\"TableRowCollumnKey:Job\",user}>{ user.currentJob.user_job_title ?  user.currentJob.user_job_title : ''}</td>\n  //           <td key={\"TableRowCollumnKey:Salary\",user}>{ user.currentJob.user_job_salary && user.currentJob.user_job_salary_currency_symbol ?  user.currentJob.user_job_salary_currency_symbol +' '+ user.currentJob.user_job_salary : ''}</td>\n  //           <td key={\"TableRowCollumnKey:Address\",user}>{ user.currentAddress.user_address_city ?  user.currentAddress.user_address_city : ''}</td>\n  //           <td key={\"TableRowCollumnKey:viewButton\",user} onClick={(event)=>event.stopPropagation()}><button name=\"Botao\" onClick={()=>this.showModal(user.currentCar)} >Visualizar</button></td>\n  //           <td key={\"TableRowCollumnKey:toggleButton\",user} style={{display:\"flex\",justifyContent: \"center\"}}>\n  //             {(i % 2 === 0) && (i % 4 === 0) ? \n  //               <FontAwesomeIcon icon={faUserAlt} style={{fontSize:\"25px\",color:\"#15a36f\"}}/> \n  //               : \n  //               <FontAwesomeIcon icon={faUserAltSlash} style={{fontSize:\"25px\",color:\"#a8140c\"}}/>\n  //             }\n  //           </td>\n  //         </TableRow> \n  //       )}\n  //     )\n  //   )\n  // };\n  render(){\n    return ( \n      <>\n        <CustomTable\n          expansible = {true}\n          key=\"UserTable\"\n          tableName=\"userTable\"\n          tableCollumn = {[\n            {headerName: \"Nomes\",collumnValue: \"user_first_name\", type: \"text\"},\n            {headerName: \"Data de Nascimento\",collumnValue: \"user_birth_date\", type: \"text\"},\n            {headerName: \"Genero\",collumnValue: \"user_gender\", type: \"text\"},\n            {headerName: \"Trabalho\",collumnValue: \"currentJob\", type: \"text\",valueFormatter: (currentJob)=> currentJob.user_job_title},\n            {headerName: \"Salario\",collumnValue: \"currentJob\",type: \"text\",valueFormatter: (currentJob)=>`${currentJob.user_job_salary_currency_symbol} ${currentJob.user_job_salary}`},\n            {headerName: \"Endereço\",collumnValue: \"currentAddress\",type: \"text\",valueFormatter: (currentAddress)=> currentAddress.user_address_city},\n            {headerName: \"Carro\",collumnValue: \"currentCar\",type: \"button\",valueFormatter: (currentCar)=> currentCar.car_name}\n          ]}\n          tableRowsValues = {this.myUserList}\n          fieldList = {{\n              \"Acesso\": [\n                {label: \"Rede\",fieldKey: \"user_access_business_technoloy\"},\n                {label: \"Login\",fieldKey: \"user_access_login\"},\n                {label: \"SO\",fieldKey: \"userOs\"},\n                {label: \"IP\",fieldKey: \"user_access_ip_address\"}\n              ],\n              \"Endereço\" : [\n                {label: \"País\",fieldKey: \"user_address_country\"},\n                {label: \"Estado\",fieldKey: \"user_address_state\"},\n                {label: \"Cidade\",fieldKey: \"user_address_city\"},\n                {label: \"Rua\",fieldKey: \"user_address_street_name\"},\n                {label: \"Endereço\",fieldKey: \"user_address_street_address\"}\n              ],\n              \"Emprego\": [\n                {label: \"Emprego\",fieldKey: \"user_job_title\"},\n                {label: \"Endereço do emprego\",fieldKey: \"user_job_address\"}\n              ], \n              \"Produto Comprado\": [\n                {label: \"Empresa\",fieldKey: \"user_product_buyed_company_name\"},\n                {label: \"Nome\",fieldKey: \"user_product_buyed_product_name\"},\n                {label: \"Material\",fieldKey: \"user_product_buyed_product_material\"},\n                {label: \"Descrição\",fieldKey: \"user_product_buyed_product_description\"} \n              ]\n          }}\n          fieldValues = {{\"Acesso\": \"currentAccess\",\"Endereço\": \"currentAddress\",\"Emprego\": \"currentJob\",\"Produto Comprado\": \"productsBuyed\"}}\n          expandedType = \"lines\"\n        />\n        <br></br>\n\n        <CustomTable\n          expansible = {true}\n          key=\"ProductTable\"\n          tableName=\"productTable\"\n          tableCollumn = {[\n            {headerName: \"Produto\",collumnValue: \"user_product_buyed_product_name\" },\n            {headerName: \"Companhia\",collumnValue: \"user_product_buyed_company_name\"},\n            {headerName: \"Material\",collumnValue: \"user_product_buyed_product_material\"},\n            {headerName: \"Departamento\",collumnValue: \"user_product_buyed_commerce_department\"},\n            {headerName: \"Preço\",collumnValue: \"user_product_buyed_product_price\"}\n          ]}\n          tableRowsValues = {this.myProductsList}\n          fieldList = {{\n            \"Compradores\": [\n              {label: \"Comprador\",fieldKey: \"consumer\"}\n            ]\n          }}\n          fieldValues = \"consumer\"\n          expandedType = \"table\"\n          mountExpanded = {this.mountExtendedProductTable}\n        />\n      </>\n    )\n  };\n}\n\nexport default ContainerTable;\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx",["83","84","85","86","87","88","89","90","91"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx",["92"],"import React, { useEffect, useState } from 'react';\r\nimport CustomCloseButton from '../customCloseButton';\r\n\r\n/**\r\n * @file module:src/components/customAlerts/index.jsx\r\n * @param {string} props.textAlert - The message that will be showed \r\n * @param {boolean} props.successAlert - case the alert is a success alert or a failure alert\r\n * @returns customized alert \r\n */\r\nexport default function CustomAlerts(props){\r\n    const [fade, setFadeEffect] = useState(false);\r\n    \r\n    useEffect(()=>\r\n    {\r\n        if (!fade) \r\n        {\r\n            setFadeEffect(true); \r\n        }     \r\n    });\r\n\r\n    return (\r\n        <div style= { fade ? style.mountedAlert : style.unmountedAlert} >\r\n            <div style={{position: \"relative\"}}>\r\n                <p style={{fontSize: \"20px\",marginLeft:\"5%\"}} >\r\n                    {props && props.textAlert ? props.textAlert : \"no message!\"}\r\n                </p>\r\n                <CustomCloseButton\r\n                    bgColor= { props && props.successAlert ? \"#75eb95\" :  \"#fc8d8d\"}\r\n                />\r\n            </div>     \r\n        </div>\r\n    )\r\n} ;\r\n\r\nconst style = {\r\n    unmountedAlert : {\r\n        position:\"fixed\",\r\n        width: \"300px\",\r\n        height:\"100px\", \r\n        display: \"flex\",\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: \"#fffbe3\",\r\n        top:\"-250px\",\r\n        left:\"-250px\",\r\n        transition: \"all 0.5s\"\r\n    },\r\n    mountedAlert: {\r\n        position:\"fixed\",\r\n        width: \"300px\",\r\n        height:\"100px\", \r\n        display: \"flex\",\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: \"#6ecc7e\",\r\n        top:\"10px\",\r\n        left:\"10px\",\r\n        transition: \"all 0.5s\"\r\n    }, \r\n\r\n    failAlert: {\r\n        position:\"absolute\",\r\n        width: \"300px\",\r\n        height:\"100px\", \r\n        display: \"flex\",\r\n        alignContent:\"center\",\r\n        alignItems:\"center\",\r\n        backgroundColor: \"#e32727\"\r\n    }\r\n}","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx",["93","94","95"],"import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp,faArrowRight} from '@fortawesome/free-solid-svg-icons'; \r\nimport ExpandedRowContent from '../expandedRowContent';\r\nimport CustomTable from '../customTable';\r\n\r\n/**\r\n * @file module:src/components/extendedTableRow/index.jsx  \r\n * @param {array} props.thisUserData - Array containing data from the user __currentAccess, currentAddress, currentJob, productsBuyed__\r\n * @param {array} props.fieldList - Array containing the list of boxes that can be expanded\r\n * @param {array} props.fieldValues - Array containing keys to access values from thisUserData\r\n * @param {string} props.expandedType - String containing the type of the box when expanded\r\n * @returns - extended row, when click in the button will show the content of the field name clicked \r\n */\r\nexport default function ExtendedTableRow(props){  \r\n    const [boxColapsed, setBoxColapsed] = useState(null); \r\n    \r\n\r\n    // console.log(\"PROPS\",props);\r\n    /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~handleClick\r\n     * @summary - when the button is clicked, open only the clicked field in the device window \r\n     */\r\n    function handleClick(newIndex) {\r\n        let currentIndex = boxColapsed; \r\n        if (newIndex !== currentIndex)\r\n            currentIndex = newIndex; \r\n        else\r\n            currentIndex = null; \r\n        setBoxColapsed(currentIndex);\r\n    }\r\n    useEffect(()=>{\r\n    },[boxColapsed])\r\n\r\n    function getExpandibleBoxes(){\r\n        \r\n        let titles = Object.keys(props.fieldList); \r\n        let fieldList = Object.values(props.fieldList);\r\n        let fieldValues = Object.values(props.fieldValues);\r\n\r\n\r\n        console.log(\"PROPS ::\",props);\r\n        return(\r\n            titles.map((title,index)=>{\r\n                    return (\r\n                        <div key={\"BoxWrapper\",title} style={style.boxWrapper}>\r\n                            <h1 style={style.extendedLineTitle}>{title}</h1>\r\n                            <button onClick={()=>handleClick(index)} style={style.boxButton}>\r\n                                { (boxColapsed === index) ? \r\n                                    <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                                    : \r\n                                    <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                                }\r\n                            </button>\r\n\r\n                            { props.expansible && props.expandedType === \"lines\" ? \r\n                                (boxColapsed === index) ? \r\n                                    <ExpandedRowContent\r\n                                        key= {\"ExpandedRowContent\",index}\r\n                                        fieldList = {fieldList[index]}\r\n                                        fieldValues = {props.thisUserData[fieldValues[index]]}\r\n                                    />\r\n                                :\r\n                                \"\"\r\n                                \r\n                            :   (boxColapsed === index) ? \r\n                                props.mountExpanded(props.index)\r\n                                :\r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                    );    \r\n                })\r\n        )\r\n        \r\n    };\r\n    \r\n    return (   \r\n        <div id=\"container\" style={style.container}>\r\n            {getExpandibleBoxes()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst style = {\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        flexDirection: \"row\"\r\n    },\r\n    boxWrapper:{\r\n        position: \"relative\",\r\n        backgroundColor: \"#ffa3a3\"\r\n    },\r\n    extendedLineTitle:{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\", \r\n        fontSize : \"18px\",\r\n        color: \"#000000\",\r\n        padding: \"16px 0\"\r\n    },\r\n    boxButton:{\r\n        border: \"none\",\r\n        textDecoration: \"none\",\r\n        cursor: \"pointer\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        left: \"10px\",\r\n        top: \"8px\"\r\n    }\r\n};\r\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":3,"column":9,"nodeType":"102","messageId":"103","endLine":3,"endColumn":17},{"ruleId":"100","severity":1,"message":"104","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":25},{"ruleId":"100","severity":1,"message":"105","line":6,"column":9,"nodeType":"102","messageId":"103","endLine":6,"endColumn":18},{"ruleId":"100","severity":1,"message":"106","line":6,"column":20,"nodeType":"102","messageId":"103","endLine":6,"endColumn":34},{"ruleId":"100","severity":1,"message":"107","line":7,"column":8,"nodeType":"102","messageId":"103","endLine":7,"endColumn":16},{"ruleId":"100","severity":1,"message":"108","line":8,"column":8,"nodeType":"102","messageId":"103","endLine":8,"endColumn":20},{"ruleId":"100","severity":1,"message":"109","line":9,"column":8,"nodeType":"102","messageId":"103","endLine":9,"endColumn":16},{"ruleId":"100","severity":1,"message":"110","line":1,"column":28,"nodeType":"102","messageId":"103","endLine":1,"endColumn":36},{"ruleId":"100","severity":1,"message":"104","line":5,"column":10,"nodeType":"102","messageId":"103","endLine":5,"endColumn":25},{"ruleId":"100","severity":1,"message":"105","line":6,"column":10,"nodeType":"102","messageId":"103","endLine":6,"endColumn":19},{"ruleId":"100","severity":1,"message":"106","line":6,"column":21,"nodeType":"102","messageId":"103","endLine":6,"endColumn":35},{"ruleId":"111","severity":1,"message":"112","line":15,"column":5,"nodeType":"113","messageId":"114","endLine":17,"endColumn":6},{"ruleId":"115","severity":1,"message":"116","line":19,"column":59,"nodeType":"117","messageId":"118","endLine":19,"endColumn":66},{"ruleId":"115","severity":1,"message":"116","line":20,"column":60,"nodeType":"117","messageId":"118","endLine":20,"endColumn":67},{"ruleId":"119","severity":1,"message":"120","line":28,"column":56,"nodeType":"121","messageId":"122","endLine":28,"endColumn":57},{"ruleId":"115","severity":1,"message":"116","line":56,"column":64,"nodeType":"117","messageId":"118","endLine":56,"endColumn":71},{"ruleId":"123","severity":1,"message":"124","line":13,"column":5,"nodeType":"102","endLine":13,"endColumn":14,"suggestions":"125"},{"ruleId":"100","severity":1,"message":"126","line":5,"column":8,"nodeType":"102","messageId":"103","endLine":5,"endColumn":19},{"ruleId":"127","severity":1,"message":"128","line":46,"column":47,"nodeType":"129","messageId":"130","endLine":46,"endColumn":48},{"ruleId":"127","severity":1,"message":"128","line":59,"column":67,"nodeType":"129","messageId":"130","endLine":59,"endColumn":68},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'UAParser' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'faUserAlt' is defined but never used.","'faUserAltSlash' is defined but never used.","'ModalCar' is defined but never used.","'CustomAlerts' is defined but never used.","'TableRow' is defined but never used.","'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","valid-typeof","Invalid typeof comparison value.","Literal","invalidValue","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFadeEffect'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [fade] as a second argument to the useEffect Hook.",["133"],"'CustomTable' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Add dependencies array: [fade]",{"range":"136","text":"137"},[591,591],", [fade]"]