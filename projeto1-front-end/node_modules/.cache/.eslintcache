[{"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js":"1","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js":"2","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js":"3","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js":"4","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js":"5","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js":"6","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js":"7","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js":"8","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js":"9","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx":"10","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx":"11","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx":"12","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx":"13","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx":"14","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx":"15","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx":"16","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx":"17","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\styles.js":"18","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\styles.js":"19","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onLoadPage\\index.jsx":"20","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onErrorPage\\index.jsx":"21","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\styles.js":"22"},{"size":526,"mtime":1629296997331,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":13108,"mtime":1631559550372,"results":"26","hashOfConfig":"24"},{"size":21086,"mtime":1628275098298,"results":"27","hashOfConfig":"24"},{"size":23367,"mtime":1628183123641,"results":"28","hashOfConfig":"24"},{"size":30761,"mtime":1628183108344,"results":"29","hashOfConfig":"24"},{"size":39041,"mtime":1628183114827,"results":"30","hashOfConfig":"24"},{"size":48402,"mtime":1628183126435,"results":"31","hashOfConfig":"24"},{"size":68803,"mtime":1629893870627,"results":"32","hashOfConfig":"24"},{"size":9524,"mtime":1631553432330,"results":"33","hashOfConfig":"24"},{"size":7396,"mtime":1631291984923,"results":"34","hashOfConfig":"24"},{"size":1981,"mtime":1629982729788,"results":"35","hashOfConfig":"24"},{"size":2201,"mtime":1630688532825,"results":"36","hashOfConfig":"24"},{"size":1652,"mtime":1629989414658,"results":"37","hashOfConfig":"24"},{"size":918,"mtime":1629291846344,"results":"38","hashOfConfig":"24"},{"size":4431,"mtime":1631293938356,"results":"39","hashOfConfig":"24"},{"size":1509,"mtime":1630349640149,"results":"40","hashOfConfig":"24"},{"size":371,"mtime":1630414395380,"results":"41","hashOfConfig":"24"},{"size":522,"mtime":1631292737778,"results":"42","hashOfConfig":"24"},{"size":560,"mtime":1631190584378,"results":"43","hashOfConfig":"24"},{"size":419,"mtime":1630701751542,"results":"44","hashOfConfig":"24"},{"size":322,"mtime":1631290743917,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1gw0wh5",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\index.js",[],["95","96"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\App.js",["97"],"//Imports\nimport React, { Component } from 'react';\nimport { UAParser } from 'ua-parser-js';\nimport CustomTable from './components/customTable';\nimport ModalCar from './components/carModal';\nimport CustomAlerts from './components/customAlerts';\n// import data from './user/users.js';\n// import job from './user/users_job.js';\n// import address from './user/users_address.js';\n// import cars from './user/users_cars.js';\n// import access from './user/users_access.js';\n// import products from './user/users_products_buyed.js';\nimport OnLoadPage from './components/onLoadPage';\nimport OnErrorPage from './components/onErrorPage';\n\n\n\nclass ContainerTable extends Component {\n  constructor(props) {\n    super(props);\n\n    // States\n    this.state = {\n      carsArrows: false, \n      isLoaded: false,\n      error: null,\n      usersData: null,\n      productsData: null,\n      showModalCar: null,\n      allUsers: this.myUserList,\n      showCustomAlert: false,\n      userTablefieldListConfig: {\n        \"Acesso\": [\n          { label: \"Rede\", fieldKey: \"user_access_business_technoloy\" },\n          { label: \"Login\", fieldKey: \"user_access_login\" },\n          { label: \"SO\", fieldKey: \"user_access_user_agent\" },\n          { label: \"IP\", fieldKey: \"user_access_ip_address\" }\n        ],\n        \"Endereço\": [\n          { label: \"País\", fieldKey: \"user_address_country\" },\n          { label: \"Estado\", fieldKey: \"user_address_state\" },\n          { label: \"Cidade\", fieldKey: \"user_address_city\" },\n          { label: \"Rua\", fieldKey: \"user_address_street_name\" },\n          { label: \"Endereço\", fieldKey: \"user_address_street_address\" }\n        ],\n        \"Emprego\": [\n          { label: \"Emprego\", fieldKey: \"user_job_title\" },\n          { label: \"Endereço do emprego\", fieldKey: \"user_job_address\" }\n        ],\n        \"Produto Comprado\": [\n          { label: \"Empresa\", fieldKey: \"user_product_buyed_company_name\" },\n          { label: \"Nome\", fieldKey: \"user_product_buyed_product_name\" },\n          { label: \"Material\", fieldKey: \"user_product_buyed_product_material\" },\n          { label: \"Descrição\", fieldKey: \"user_product_buyed_product_description\" }\n        ]\n      },\n      userTableCollumns: [\n        { headerName: \"Nomes\", collumnValue: \"user_first_name\", type: \"text\" },\n        { headerName: \"Data de Nascimento\", collumnValue: \"user_birth_date\", type: \"text\" },\n        { headerName: \"Genero\", collumnValue: \"user_gender\", type: \"text\" },\n        { headerName: \"Trabalho\", collumnValue: \"currentJob\", type: \"text\", valueFormatter: (currentJob) => currentJob.user_job_title },\n        { headerName: \"Salario\", collumnValue: \"currentJob\", type: \"text\", valueFormatter: (currentJob) => `${currentJob.user_job_salary_currency_symbol} ${currentJob.user_job_salary}` },\n        { headerName: \"Endereço\", collumnValue: \"currentAddress\", type: \"text\", valueFormatter: (currentAddress) => currentAddress.user_address_city },\n        { headerName: \"Carro\", collumnValue: \"currentCar\", type: \"button\", handleClick: this.showModal },\n        { headerName: \"Status\", collumnValue: \"\", type: \"icon\" }\n      ],\n      productTableCollumns: [\n        { headerName: \"Produto\", collumnValue: \"productName\", type: \"text\" },\n        { headerName: \"Companhia\", collumnValue: \"companyName\", type: \"text\" },\n        { headerName: \"Material\", collumnValue: \"material\", type: \"text\" },\n        { headerName: \"Departamento\", collumnValue: \"buyedCommerceDepartment\", type: \"text\" },\n        { headerName: \"Preço\", collumnValue: \"price\", type: \"text\" }\n      ]\n    };\n\n\n    // Binds\n    this.setUsersChanges = this.setUsersChanges.bind(this)\n    this.showModal = this.showModal.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.showAlert = this.showAlert.bind(this)\n    this.mountExtendedProductTable = this.mountExtendedProductTable.bind(this);\n    this.mountExtendedUserTable = this.mountExtendedUserTable.bind(this);\n    this.getCollumnFormattedData = this.getCollumnFormattedData.bind(this);\n\n  };\n\n  componentDidMount() {\n    Promise.all([\n      fetch(\"http://localhost:3010/listUsersAndProducts\").then(res => res.json())\n    ]).then(([data]) => {\n      this.setState({\n        usersData: data.usersData,\n        productsData: data.productsData,\n        isLoaded: true\n      });\n    }).catch(err => {\n      console.log(\"ERRO!! \", err);\n      this.setState({\n        error: true,\n        isLoaded: true\n      });\n    })\n  };\n  setUsersChanges(carChanged) {\n    const newList = this.state.allUsers;\n    const search = (element) => element.user_id === carChanged.userID;\n    let index = newList.findIndex(search);\n    newList[index].currentCar = carChanged;\n    this.setState({ allUsers: newList, showCustomAlert: true });\n    setTimeout(() => {\n      this.setState({ showCustomAlert: false });\n    }, 5000)\n    this.closeModal();\n  };\n\n  // map the jobs array and return the job(s) title(s)\n  getCollumnFormattedData(row, fieldName, fieldKey){\n    // console.log(row);\n    let allDataReturn = []; \n    let rowData = row[fieldName]; \n    for (let i = 0; i < rowData.length; i++){\n      let fieldValue = rowData[i];\n      if (fieldValue[fieldKey])\n        allDataReturn += fieldValue[fieldKey] + \" | \"; \n    }\n    if (typeof allDataReturn === \"string\")\n      allDataReturn = allDataReturn.substring(0, allDataReturn.length - 3); \n    return allDataReturn; \n  }\n\n  // receiving user id\n  showModal(dataId, currentCar) {\n    console.log(\"DATA ID : \", dataId);\n    // console.log(\"car from user\",this.state.usersCarsData[dataId]);\n    let carObject = this.state.usersCarsData[dataId]; \n    console.log(\"CAR OBJ\",carObject);\n    // if exist a first car\n    if (carObject[0].carName){\n\n      if (carObject.length < 2)\n        this.setState({\n          showModalCar: carObject[0],\n          carsArrows: false \n        })\n      else\n        this.setState({\n          showModalCar: carObject[currentCar],\n          carsArrows: true \n        }) \n    }\n    else \n      console.log(\"NO CAR!!!\");\n      \n  };\n\n  closeModal() {\n    this.setState({\n      showModalCar: null\n    })\n  };\n\n  showAlert() {\n    this.setState({\n      showCustomAlert: true\n    })\n  };\n\n  // Function that will mount the expanded table when called \n  mountExtendedProductTable(productId) {\n    // let consumer = this.consumerControll[productId] || {};\n    console.log(\"ROW DATA\",this.state.productsData[productId]); \n    \n    // console.log(\"CONSUMERS\",consumer);\n    // if (consumer && consumer[0].consumerName)\n    //   return (\n    //     <div style={{ border: \"10px solid #cfc7ff\" }}>\n    //       <CustomTable\n    //         expansible={false}\n    //         key=\"ExtendedProductTable\"\n    //         tableName=\"ExtendedProductTable\"\n    //         tableCollumn={[\n    //           { headerName: \"Nomes\", collumnValue: \"consumerName\", type: \"text\" },\n    //           { headerName: \"Data de Nascimento\", collumnValue: \"consumerBirthDate\", type: \"text\" }\n    //         ]}\n    //         tableRowsValues={consumer}\n    //       />\n    //     </div>\n    //   )\n    // return (\n    //   <div style={{ border: \"10px solid #cfc7ff\" }}>\n    //     <h2 style={{ fontSize: \"20px\", color: \"#fff\", display: \"flex\", textAlign: \"center\", justifyContent: \"center\", fontWeight: \"bold\" }}>\n    //       Sem consumidores!\n    //     </h2>\n    //   </div>\n    // )\n  };\n\n  // Function that will mount the expanded table when called \n  mountExtendedUserTable(userId, rowId) {\n    console.log(\"USERID:\",userId,\"ROWCLICKED\",rowId);\n    // Access\n    if (rowId === 0)\n      return (\n      <div>\n      </div>)\n    // Address\n    else if (rowId === 1)\n      return (<div>\"1\"</div>)\n    // Job\n    else if (rowId === 2){\n      // console.log(this.state.usersData[userId]);\n      return (\n    <div style={{display: \"flex\", flexDirection: \"column\", alignItems: \"flex-start\", margin: \"0 2%\"}}>\n          <p> <strong>Profissão:</strong>{this.getJobsTitles(this.state.usersData[userId])} </p>\n          <p> <strong>Salário:</strong>{this.getSalary(this.state.usersData[userId])} </p>\n          <p> <strong>Endereço:</strong>{this.getJobAddress(this.state.usersData[userId])} </p>\n      </div>)}\n    // Product Buyed\n    else if (rowId === 3)\n      return (<div>\"3\"</div>)\n  };\n\n\n  render() {\n    console.log(\"user data\", this.state.usersData);\n    console.log(\"products data\", this.state.productsData);\n    return (\n      <>\n\n        {this.state.isLoaded ?\n          !this.state.error ?\n            <div style={{ height: \"100vh\" }}>\n              {this.state.showCustomAlert ?\n                <CustomAlerts\n                  textAlert=\"Carro foi alterado com sucesso! \"\n                  successAlert={true}\n                  alertObject={\n                    this.state.showCustomAlert\n                  }\n                  showCustomAlert={\n                    this.showAlert\n                  }\n                  closeTime={4000}\n                />\n                :\n                null\n              }\n              {this.state.showModalCar ?\n                <ModalCar\n                  carObject={\n                    this.state.showModalCar\n                  }\n                  closeHandler={\n                    this.closeModal\n                  }\n                  saveChanges={\n                    this.setUsersChanges\n                  }\n                  carsArrows = {\n                    this.state.carsArrows\n                  }\n                />\n                :\n                null\n              }\n\n\n              <div style={{ height: \"50vh\", overflowY: \"scroll\" }}>\n                <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\n                  Tabela de Usuários\n                </h1>\n                <CustomTable\n                  expansible={true}\n                  key=\"UserTable\"\n                  tableName=\"userTable\"\n                  tableCollumn={[\n                    { headerName: \"Nomes\", collumnValue: \"userName\", type: \"text\" },\n                    { headerName: \"Data de Nascimento\", collumnValue: \"userBirthDate\", type: \"text\" },\n                    { headerName: \"Profissão\", collumnValue: \"jobs\", type: \"text\",valueFormatter: this.getCollumnFormattedData, fieldName: \"jobs\",fieldKey: \"jobTitle\" },\n                    { headerName: \"Salário\", collumnValue: \"jobs\", type: \"text\",valueFormatter: this.getCollumnFormattedData, fieldName: \"jobs\",fieldKey: \"salary\"},\n                    { headerName: \"Carro\",collumnValue: \"carName\",type: \"button\",handleClick: this.showModal}\n\n\n                    // {headerName: \"Trabalho\",collumnValue: \"currentJob\", type: \"text\",valueFormatter: (currentJob)=> currentJob.user_job_title},\n                    // {headerName: \"Salario\",collumnValue: \"currentJob\",type: \"text\",valueFormatter: (currentJob)=>`${currentJob.user_job_salary_currency_symbol} ${currentJob.user_job_salary}`},\n                    // {headerName: \"Endereço\",collumnValue: \"currentAddress\",type: \"text\",valueFormatter: (currentAddress)=> currentAddress.user_address_city},\n                    // {headerName: \"Carro\",collumnValue: \"currentCar\",type: \"button\",handleClick: this.showModal}\n                  ]}\n                  tableRowsValues={this.state.usersData}\n                  fieldList={\n                    this.state.userTablefieldListConfig\n                  }\n                  fieldValues={{ \"Acesso\": 0, \"Endereço\": 1, \"Emprego\": 2, \"Produto Comprado\": 3}}\n                  expandedType=\"lines\"\n                  mountExpanded={this.mountExtendedUserTable}\n                />\n              </div>\n              <div style={{ height: \"50vh\", overflowY: \"scroll\" }}>\n                <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\n                  Tabela de Produtos\n                </h1>\n                <CustomTable\n                  expansible={true}\n                  key=\"ProductTable\"\n                  tableName=\"productTable\"\n                  tableCollumn={this.state.productTableCollumns}\n                  tableRowsValues={this.state.productsData}\n                  expandedType=\"table\"\n                  mountExpanded={this.mountExtendedProductTable}\n                />\n              </div>\n            </div> :\n            <OnErrorPage />\n          :\n          <div style={{ height: \"100vh\" }}>\n\n            <div style={{ height: \"50vh\", overflowY: \"scroll\" }}>\n              <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\n                Tabela de Usuários\n              </h1>\n              <OnLoadPage />\n            </div>\n            <div style={{ height: \"50vh\", overflowY: \"scroll\" }}>\n              <h1 style={{ display: \"flex\", justifyContent: \"center\", width: \"100%\", backgroundColor: \"#8570fa\", margin: \"0 0\", color: \"#fff\" }}>\n                Tabela de Produtos\n              </h1>\n              <OnLoadPage />\n            </div>\n          </div>\n        }\n      </>\n    )\n  };\n}\n\nexport default ContainerTable;\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_cars.js",[],["98","99"],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_job.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_access.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_address.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\user\\users_products_buyed.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\index.jsx",["100","101"],"import React, { useEffect, useState, useRef } from 'react';\r\nimport CustomInput from '../customInput/index';\r\nimport CustomCloseButton from '../customCloseButton';\r\nimport { ControlButton } from './styles';\r\n\r\n/**\r\n * @file module:src/components/carModal\r\n * @param {array of data} carObject \r\n * @param {function} closeHandler \r\n * @param {function} saveChanges \r\n * @returns a car modal with the information from the clicked line user\r\n */\r\nexport default function ModalCar({ carObject, closeHandler, saveChanges, carsArrows }) {\r\n\r\n    console.log(\"MORE THAN ONE CAR?\", carsArrows);\r\n    console.log(\"Car Object:\", carObject);\r\n\r\n    const [carChanged, setChanges] = useState({\r\n        car_manufacturer: (carObject && carObject.manufacturer) ? carObject.manufacturer : \"\",\r\n        car_model: (carObject && carObject.model) ? carObject.model : \"\",\r\n        car_name: (carObject && carObject.carName) ? carObject.carName : \"\",\r\n        car_fuel: (carObject && carObject.fuel) ? carObject.fuel : \"\",\r\n        userID: (carObject && carObject.userID) ? carObject.userID : \"\"\r\n    })\r\n\r\n\r\n    const [canPrevious, setPreviousCar] = useState(\r\n        false\r\n    )\r\n\r\n    const [canForward, setForwardCar] = useState(\r\n        false\r\n    )\r\n\r\n    const [readOnly, setReadOnlyState] = useState(\r\n        true\r\n    )\r\n    const myRef = useRef();\r\n\r\n    function edit() {\r\n        setReadOnlyState(!readOnly);\r\n        // console.log(readOnly);\r\n    }\r\n    const closeListener = (e) => {\r\n        if (e.keyCode === 27)\r\n            closeHandler();\r\n\r\n        if (e.type === \"click\")\r\n            closeHandler();\r\n    }\r\n    // setting event listener to close modal in case of esc or outside click\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", closeListener);\r\n        window.addEventListener(\"click\", closeListener);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", closeListener);\r\n            window.removeEventListener(\"click\", closeListener);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div style={style.parentDiv} >\r\n            <div style={style.modalDiv} onClick={event => event.stopPropagation()} tabIndex=\"0\" ref={myRef}>\r\n                <div style={style.headerModal}>\r\n                    <h1 style={{ color: \"#ffffff\" }}>Carro</h1>\r\n                    <CustomCloseButton\r\n                        handleClick={closeHandler}\r\n                        bgColor=\"#4169E1\"\r\n                    />\r\n\r\n                    <ControlButton able={canPrevious} style={{ position: \"absolute\", top: \"5px\", left: \"5px\" }}>&lt;&lt;</ControlButton>\r\n                    <ControlButton able={canForward} style={{ position: \"absolute\", top: \"5px\", left: \"40px\" }}>&gt;&gt;</ControlButton>\r\n\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        autoFocus={true}\r\n                        labelName=\"Marca \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_manufacturer}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_manufacturer: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        labelName=\"Modelo \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_model}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_model: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        labelName=\"Nome \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_name}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_name: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    <CustomInput\r\n                        labelName=\"Combustível \"\r\n                        type=\"text\"\r\n                        value={carChanged.car_fuel}\r\n                        onChange={\r\n                            event => setChanges(\r\n                                currentState => ({ ...currentState, car_fuel: event.target.value })\r\n                            )\r\n                        }\r\n                        readOnly={readOnly}\r\n                    />\r\n                </div>\r\n                <div style={style.headerModalContent}>\r\n                    <p style={style.headerModalLine}></p>\r\n                    {!readOnly ? <input type=\"submit\" value=\"Salvar\" onClick={() => saveChanges(carChanged)}\r\n                        style={{ ...style.headerButton, backgroundColor: \"#42ad55\" }} /> : \"\"}\r\n                    <button onClick={() => edit()}\r\n                        style={readOnly ? style.headerDefault : { ...style.headerButton, backgroundColor: \"#ff0000\" }}>\r\n                        {readOnly ? \"Editar\" : \"Cancelar\"}\r\n                    </button>\r\n                </div>\r\n                <p style={style.headerModalLine}></p>\r\n            </div>\r\n        </div >\r\n    )\r\n};\r\n\r\nconst style = {\r\n    parentDiv: {\r\n        backgroundColor: \"rgb(163, 163, 163,0.8)\",\r\n        position: \"fixed\",\r\n        zIndex: 10,\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\"\r\n    },\r\n    modalDiv: {\r\n        width: \"50%\",\r\n        height: \"50%\",\r\n        position: \"relative\"\r\n    },\r\n    headerModal: {\r\n        backgroundColor: \"#000080\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignContent: \"center\",\r\n        width: \"100%\",\r\n        height: \"20%\"\r\n    },\r\n    headerModalContent: {\r\n        height: \"20%\",\r\n        backgroundColor: \"#ffffff\"\r\n    },\r\n    headerModalLine: {\r\n        backgroundColor: \"#4169E1\",\r\n        width: \"100%\",\r\n        height: \"4px\",\r\n        marginTop: \"0px\"\r\n    },\r\n    headerButton: {\r\n        fontSize: \"20px\",\r\n        display: \"inline\",\r\n        height: \"50px\",\r\n        width: \"40%\",\r\n        margin: \"0 5%\",\r\n        backgroundColor: \"#ff7d7d\",\r\n        color: \"#ffffff\",\r\n        border: \"none\",\r\n        cursor: \"pointer\"\r\n    },\r\n    headerDefault: {\r\n        fontSize: \"20px\",\r\n        display: \"inline\",\r\n        height: \"50px\",\r\n        width: \"80%\",\r\n        margin: \"0 10%\",\r\n        backgroundColor: \"#191970\",\r\n        color: \"#ffffff\",\r\n        border: \"none\",\r\n        cursor: \"pointer\"\r\n    }\r\n};","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customAlerts\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customInput\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customCloseButton\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\extendedTableRow\\index.jsx",["102","103","104"],"import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp,faArrowRight} from '@fortawesome/free-solid-svg-icons'; \r\nimport ExpandedRowContent from '../expandedRowContent';\r\n\r\n/**\r\n * @file module:src/components/extendedTableRow/index.jsx  \r\n * @param {array} props.thisUserData - Array containing data from the user __currentAccess, currentAddress, currentJob, productsBuyed__\r\n * @param {array} props.fieldList - Array containing the list of boxes that can be expanded\r\n * @param {array} props.fieldValues - Array containing keys to access values from thisUserData\r\n * @param {string} props.expandedType - String containing the type of the box when expanded\r\n * @returns - extended row, when click in the button will show the content of the field name clicked \r\n */\r\nexport default function ExtendedTableRow(props){  \r\n    const [boxColapsed, setBoxColapsed] = useState(null); \r\n    /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~handleClick\r\n     * @summary - when the button is clicked, open only the clicked field in the device window \r\n     * @param {number} newIndex - When a box is clicked, the index of it´s box will be passed      \r\n     */\r\n    function handleClick(newIndex) {\r\n        let currentIndex = boxColapsed; \r\n        if (newIndex !== currentIndex)\r\n            currentIndex = newIndex; \r\n        else\r\n            currentIndex = null; \r\n        setBoxColapsed(currentIndex);\r\n    }\r\n    useEffect(()=>{\r\n    },[boxColapsed])\r\n /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~getExpandibleBoxes\r\n     * @summary - get the expandible box(es) according to the expanded type\r\n     * @return expansible boxes of expanded row\r\n     */\r\n    function getExpandibleBoxes(){\r\n        // not altering its values \r\n        // the keys of the fieldlist are the titles from the box(es)\r\n        let titles;      \r\n        let fieldList;   \r\n        let fieldValues; \r\n        if (props.expansible && props.expandedType === \"lines\" ){\r\n            titles = Object.keys(props.fieldList); \r\n            // fieldList = Object.values(props.fieldList);\r\n            // fieldValues= Object.values(props.fieldValues);\r\n            return(\r\n                titles.map((title,field)=>{\r\n                        return (\r\n                            <div key={\"BoxWrapper\"+title} style={style.boxWrapper}>\r\n                                <h1 style={style.extendedLineTitle}>{title}</h1>\r\n                                <button onClick={()=>handleClick(field)} style={style.boxButton}>\r\n                                    { (boxColapsed === field) ? \r\n                                        <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                                        : \r\n                                        <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                                    }\r\n                                </button>\r\n                                {(boxColapsed === field && typeof props.mountExpanded === \"function\") ?\r\n                                        props.mountExpanded(props.index, field)\r\n                                    :\r\n                                    null\r\n                                }\r\n                            </div>\r\n                        );    \r\n                    })\r\n                )}\r\n\r\n                else if (typeof props.mountExpanded === \"function\")\r\n                    return props.mountExpanded(props.index)\r\n    };\r\n    \r\n    return (   \r\n        <div id=\"container\" style={style.container}>\r\n            {getExpandibleBoxes()}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst style = {\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        flexDirection: \"row\"\r\n    },\r\n    boxWrapper:{\r\n        position: \"relative\",\r\n        backgroundColor: \"#8570fa\"\r\n    },\r\n    extendedLineTitle:{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\", \r\n        fontSize : \"18px\",\r\n        color: \"#fff\",\r\n        padding: \"16px 0\"\r\n    },\r\n    boxButton:{\r\n        border: \"none\",\r\n        textDecoration: \"none\",\r\n        cursor: \"pointer\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        left: \"10px\",\r\n        top: \"8px\"\r\n    }\r\n};\r\n","C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\expandedRowContent\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\tableRow\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\customTable\\styles.js",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onLoadPage\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\onErrorPage\\index.jsx",[],"C:\\Users\\Engenharia\\Desktop\\Projetos\\ReactTableProject\\projeto1-front-end\\src\\components\\carModal\\styles.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":18},{"ruleId":"105","replacedBy":"113"},{"ruleId":"107","replacedBy":"114"},{"ruleId":"109","severity":1,"message":"115","line":27,"column":25,"nodeType":"111","messageId":"112","endLine":27,"endColumn":39},{"ruleId":"109","severity":1,"message":"116","line":31,"column":24,"nodeType":"111","messageId":"112","endLine":31,"endColumn":37},{"ruleId":"109","severity":1,"message":"117","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":26},{"ruleId":"109","severity":1,"message":"118","line":40,"column":13,"nodeType":"111","messageId":"112","endLine":40,"endColumn":22},{"ruleId":"109","severity":1,"message":"119","line":41,"column":13,"nodeType":"111","messageId":"112","endLine":41,"endColumn":24},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'UAParser' is defined but never used.","Identifier","unusedVar",["120"],["121"],"'setPreviousCar' is assigned a value but never used.","'setForwardCar' is assigned a value but never used.","'ExpandedRowContent' is defined but never used.","'fieldList' is defined but never used.","'fieldValues' is defined but never used.","no-global-assign","no-unsafe-negation"]