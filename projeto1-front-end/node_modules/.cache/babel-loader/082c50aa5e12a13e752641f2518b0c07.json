{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engenharia\\\\Desktop\\\\Projetos\\\\Projeto-1\\\\projeto1-front-end\\\\src\\\\components\\\\customTable\\\\index.jsx\";\nimport React, { Component, useState } from 'react'; // import CustomAlerts from './components/customAlerts';\n\nimport TableRow from '../tableRow';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomTable extends Component {\n  constructor(props) {\n    super(props); // console.log(\"PROPS PASSADAS:\", props);\n  }\n\n  gettabledatas() {\n    let rows = this.props.tableRowsValues;\n    let collumns = this.props.tableCollumn;\n    return rows.map((row, i) => {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        index: i,\n        userData: this.props.tableRowsValues[row],\n        fieldList: this.props.fieldList,\n        filedValues: this.props.fieldValues,\n        children: collumns.map((collumn, j) => {\n          let value = row[collumn.collumnValue];\n          if (collumn.valueFormatter && typeof collumn.valueFormatter === \"function\") value = collumn.valueFormatter(value, row);\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\",\n              paddingLeft: \"2%\",\n              fontSize: \"12px\"\n            },\n            children: value\n          }, (\"Collumns key\", row, value), false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 33\n          }, this);\n        })\n      }, (\"TableRowKey\", row, i), false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  getHeader() {\n    let headerTitles = this.props.tableCollumn;\n    return headerTitles.map(headerTitle => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: headerTitle.headerName\n      }, (\"TableKey\", headerTitles.headerName), false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        align: \"center\",\n        borderCollapse: \"collapse\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          backgroundColor: \"#ff7070\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: this.getHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.gettabledatas()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default CustomTable;","map":{"version":3,"sources":["C:/Users/Engenharia/Desktop/Projetos/Projeto-1/projeto1-front-end/src/components/customTable/index.jsx"],"names":["React","Component","useState","TableRow","FontAwesomeIcon","faUserAlt","faUserAltSlash","CustomTable","constructor","props","gettabledatas","rows","tableRowsValues","collumns","tableCollumn","map","row","i","fieldList","fieldValues","collumn","j","value","collumnValue","valueFormatter","backgroundColor","paddingLeft","fontSize","getHeader","headerTitles","headerTitle","headerName","render","width","align","borderCollapse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,mCAA1C;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;AAEH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAIC,IAAI,GAAG,KAAKF,KAAL,CAAWG,eAAtB;AACA,QAAIC,QAAQ,GAAG,KAAKJ,KAAL,CAAWK,YAA1B;AAEA,WACIH,IAAI,CAACI,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,KAAY;AACjB,0BACI,QAAC,QAAD;AAEA,QAAA,KAAK,EAAEA,CAFP;AAGA,QAAA,QAAQ,EAAE,KAAKR,KAAL,CAAWG,eAAX,CAA2BI,GAA3B,CAHV;AAIA,QAAA,SAAS,EAAE,KAAKP,KAAL,CAAWS,SAJtB;AAKA,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWU,WALxB;AAAA,kBAOKN,QAAQ,CAACE,GAAT,CAAa,CAACK,OAAD,EAAUC,CAAV,KAAgB;AAE1B,cAAIC,KAAK,GAAGN,GAAG,CAACI,OAAO,CAACG,YAAT,CAAf;AACA,cAAIH,OAAO,CAACI,cAAR,IAA0B,OAAOJ,OAAO,CAACI,cAAf,KAAkC,UAAhE,EACIF,KAAK,GAAGF,OAAO,CAACI,cAAR,CAAuBF,KAAvB,EAA6BN,GAA7B,CAAR;AACJ,8BAEI;AAAmC,YAAA,KAAK,EACpC;AAAES,cAAAA,eAAe,EAAER,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAc,SAAd,GAA0B,SAA7C;AAAwDS,cAAAA,WAAW,EAAE,IAArE;AAA2EC,cAAAA,QAAQ,EAAE;AAArF,aADJ;AAAA,sBAGKL;AAHL,cAAS,gBAAeN,GAAf,EAAmBM,KAA5B;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAOE,SAZL;AAPL,UACK,eAAcN,GAAd,EAAkBC,CADvB;AAAA;AAAA;AAAA;AAAA,cADJ;AAwBH,KAzBD,CADJ;AA8BH;;AAEDW,EAAAA,SAAS,GAAG;AACR,QAAIC,YAAY,GAAG,KAAKpB,KAAL,CAAWK,YAA9B;AACA,WACIe,YAAY,CAACd,GAAb,CAAkBe,WAAD,IAAiB;AAC9B,0BACI;AAAA,kBAA8CA,WAAW,CAACC;AAA1D,UAAS,YAAWF,YAAY,CAACE,UAAjC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,CADJ;AAOH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAO,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAeC,QAAAA,KAAK,EAAE,QAAtB;AAAgCC,QAAAA,cAAc,EAAE;AAAhD,OAAd;AAAA,8BACI;AAAO,QAAA,KAAK,EAAE;AAAEV,UAAAA,eAAe,EAAE;AAAnB,SAAd;AAAA,+BACI;AAAA,oBACK,KAAKG,SAAL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBACK,KAAKlB,aAAL;AADL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AApE+B;;AAsEnC;AAED,eAAeH,WAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\n\r\n// import CustomAlerts from './components/customAlerts';\r\nimport TableRow from '../tableRow';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\r\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\r\n\r\n\r\nclass CustomTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // console.log(\"PROPS PASSADAS:\", props);\r\n\r\n    };\r\n\r\n    gettabledatas() {\r\n        let rows = this.props.tableRowsValues;\r\n        let collumns = this.props.tableCollumn;\r\n        \r\n        return (\r\n            rows.map((row, i) => {\r\n                return (\r\n                    <TableRow\r\n                    key={\"TableRowKey\",row,i}  \r\n                    index={i}  \r\n                    userData={this.props.tableRowsValues[row]} \r\n                    fieldList={this.props.fieldList}\r\n                    filedValues={this.props.fieldValues}\r\n                    >\r\n                        {collumns.map((collumn, j) => {\r\n                            \r\n                            let value = row[collumn.collumnValue]; \r\n                            if (collumn.valueFormatter && typeof collumn.valueFormatter === \"function\")\r\n                                value = collumn.valueFormatter(value,row);\r\n                            return (\r\n\r\n                                <td key={\"Collumns key\",row,value} style={\r\n                                    { backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\", paddingLeft: \"2%\", fontSize: \"12px\"}\r\n                                    }>\r\n                                    {value}\r\n                                </td>\r\n                            )}\r\n                        )}\r\n                    </TableRow>\r\n                )\r\n            }\r\n            )\r\n\r\n        )\r\n    };\r\n\r\n    getHeader() {\r\n        let headerTitles = this.props.tableCollumn;\r\n        return (\r\n            headerTitles.map((headerTitle) => {\r\n                return (\r\n                    <th key={\"TableKey\",headerTitles.headerName}>{headerTitle.headerName}</th>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <table style={{width: \"100%\",align: \"center\", borderCollapse: \"collapse\"}}>\r\n                <thead style={{ backgroundColor: \"#ff7070\"}}>\r\n                    <tr>\r\n                        {this.getHeader()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.gettabledatas()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default CustomTable;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}