{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engenharia\\\\Desktop\\\\Projetos\\\\Projeto-1\\\\projeto1-front-end\\\\src\\\\components\\\\customTable\\\\index.jsx\";\nimport React, { Component, useState } from 'react'; // import CustomAlerts from './components/customAlerts';\n\nimport TableRow from '../tableRow';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CustomTable extends Component {\n  constructor(props) {\n    super(props);\n    console.log(\"PROPS:\", props);\n  }\n\n  getuserdatas() {\n    let rows = this.props.tableRowsValues;\n    let collumns = this.props.tableCollumn;\n    return rows.map((row, i) => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: collumns.map((collumn, j) => {\n          // console.log(collumn);\n          let value = row[collumn.collumnValue];\n          if (collumn.valueFormatter && typeof collumn.valueFormatter === \"function\") value = collumn.valueFormatter(value, row);\n          return /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\",\n              border: \"1px solid #404040\"\n            },\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  getHeader() {\n    let headerTitles = this.props.tableLine;\n    return headerTitles.map((header, i) => {\n      return /*#__PURE__*/_jsxDEV(\"th\", {\n        children: headerTitles[i].headerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        align: \"center\",\n        borderCollapse: \"collapse\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          backgroundColor: \"#ff7070\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: this.getHeader()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: this.getuserdatas()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default CustomTable;","map":{"version":3,"sources":["C:/Users/Engenharia/Desktop/Projetos/Projeto-1/projeto1-front-end/src/components/customTable/index.jsx"],"names":["React","Component","useState","TableRow","FontAwesomeIcon","faUserAlt","faUserAltSlash","CustomTable","constructor","props","console","log","getuserdatas","rows","tableRowsValues","collumns","tableCollumn","map","row","i","collumn","j","value","collumnValue","valueFormatter","backgroundColor","border","getHeader","headerTitles","tableLine","header","headerName","render","width","align","borderCollapse"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,EAAoBC,cAApB,QAA0C,mCAA1C;AACA;AACA;AACA;AACA;AACA;;;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAChCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AAEH;;AAEDG,EAAAA,YAAY,GAAG;AACX,QAAIC,IAAI,GAAG,KAAKJ,KAAL,CAAWK,eAAtB;AACA,QAAIC,QAAQ,GAAG,KAAKN,KAAL,CAAWO,YAA1B;AAEA,WACIH,IAAI,CAACI,GAAL,CAAS,CAACC,GAAD,EAAMC,CAAN,KAAY;AACjB,0BACI;AAAA,kBACKJ,QAAQ,CAACE,GAAT,CAAa,CAACG,OAAD,EAAUC,CAAV,KAAgB;AAC1B;AACA,cAAIC,KAAK,GAAGJ,GAAG,CAACE,OAAO,CAACG,YAAT,CAAf;AACA,cAAIH,OAAO,CAACI,cAAR,IAA0B,OAAOJ,OAAO,CAACI,cAAf,KAAkC,UAAhE,EACIF,KAAK,GAAGF,OAAO,CAACI,cAAR,CAAuBF,KAAvB,EAA6BJ,GAA7B,CAAR;AACJ,8BACI;AAAI,YAAA,KAAK,EACL;AAAEO,cAAAA,eAAe,EAAEN,CAAC,GAAG,CAAJ,KAAU,CAAV,GAAc,SAAd,GAA0B,SAA7C;AACAO,cAAAA,MAAM,EAAE;AADR,aADJ;AAAA,sBAIKJ;AAJL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAQH,SAbA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ;AAmBH,KApBD,CADJ;AAyBH;;AAEDK,EAAAA,SAAS,GAAG;AACR,QAAIC,YAAY,GAAG,KAAKnB,KAAL,CAAWoB,SAA9B;AACA,WACID,YAAY,CAACX,GAAb,CAAiB,CAACa,MAAD,EAASX,CAAT,KAAe;AAC5B,0BACI;AAAA,kBAAKS,YAAY,CAACT,CAAD,CAAZ,CAAgBY;AAArB;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJD,CADJ;AAOH;;AAGDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE,MAAT;AAAiBC,QAAAA,KAAK,EAAE,QAAxB;AAAkCC,QAAAA,cAAc,EAAE;AAAlD,OAAd;AAAA,8BACI;AAAO,QAAA,KAAK,EAAE;AAAEV,UAAAA,eAAe,EAAE;AAAnB,SAAd;AAAA,+BACI;AAAA,oBACK,KAAKE,SAAL;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAA,kBACK,KAAKf,YAAL;AADL;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAYH;;AAhE+B;;AAkEnC;AAED,eAAeL,WAAf","sourcesContent":["import React, { Component, useState } from 'react';\r\n\r\n// import CustomAlerts from './components/customAlerts';\r\nimport TableRow from '../tableRow';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserAlt, faUserAltSlash } from '@fortawesome/free-solid-svg-icons';\r\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\r\n\r\n\r\nclass CustomTable extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(\"PROPS:\", props);\r\n\r\n    };\r\n\r\n    getuserdatas() {\r\n        let rows = this.props.tableRowsValues;\r\n        let collumns = this.props.tableCollumn;\r\n        \r\n        return (\r\n            rows.map((row, i) => {\r\n                return (\r\n                    <tr>\r\n                        {collumns.map((collumn, j) => {\r\n                            // console.log(collumn);\r\n                            let value = row[collumn.collumnValue]; \r\n                            if (collumn.valueFormatter && typeof collumn.valueFormatter === \"function\")\r\n                                value = collumn.valueFormatter(value,row);\r\n                            return (\r\n                                <td style={\r\n                                    { backgroundColor: i % 2 === 0 ? \"#ffffff\" : \"#c2c2c2\",\r\n                                    border: \"1px solid #404040\"}\r\n                                    }>\r\n                                    {value}\r\n                                </td>\r\n                            )\r\n                        })\r\n                        }\r\n                    </tr>\r\n                )\r\n            }\r\n            )\r\n\r\n        )\r\n    };\r\n\r\n    getHeader() {\r\n        let headerTitles = this.props.tableLine;\r\n        return (\r\n            headerTitles.map((header, i) => {\r\n                return (\r\n                    <th>{headerTitles[i].headerName}</th>\r\n                )\r\n            })\r\n        )\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <table style={{ width: \"100%\", align: \"center\", borderCollapse: \"collapse\"}}>\r\n                <thead style={{ backgroundColor: \"#ff7070\" }}>\r\n                    <tr>\r\n                        {this.getHeader()}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.getuserdatas()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default CustomTable;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}