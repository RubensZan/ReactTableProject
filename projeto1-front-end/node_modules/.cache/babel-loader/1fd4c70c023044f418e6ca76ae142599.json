{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engenharia\\\\Desktop\\\\Projetos\\\\Projeto-1\\\\projeto1-front-end\\\\src\\\\components\\\\extendedTableRow\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { UAParser } from 'ua-parser-js';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowUp, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport ExpandedRowContent from '../expandedRowContent';\n/**\r\n * @file module:src/components/extendedTableRow/index.jsx  \r\n * @param {array} props.thisUserData - Array containing data from the user __currentAccess, currentAddress, currentJob, productsBuyed__\r\n * @returns - extended row, when click in the button will show the content of the field name clicked \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExtendedTableRow(props) {\n  _s();\n\n  // Variables to pass the specified content needed to custom expanded box\n  // let accessData = props.thisUserData.currentAccess; \n  // let addressData = props.thisUserData.currentAddress; \n  // let jobData = props.thisUserData.currentJob; \n  // let productData = props.thisUserData.productsBuyed; \n  // let parser = new UAParser();\n  // let uaString = props.thisUserData.currentAccess.user_access_user_agent;\n  // let OS = parser.setUA(uaString).getOS();\n  // props.thisUserData.currentAccess.userOs = OS.name+' '+OS.version;\n  const [boxColapsed, setBoxColapsed] = useState(null);\n  /**\r\n   * @function module:src/components/extendedTableRow/extendedTableRow~handleClick\r\n   * @summary - when the button is clicked, open only the clicked field in the device window \r\n   */\n\n  function handleClick(newIndex) {\n    let currentIndex = boxColapsed;\n    if (newIndex !== currentIndex) currentIndex = newIndex;else currentIndex = null;\n    setBoxColapsed(currentIndex);\n  }\n\n  console.log(\"FIELDLIST:\", props);\n  console.log(\"\", props.thisUserData[props.fieldValues[0]]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style.boxWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: style.extendedLineTitle,\n        children: \"Acesso do Usu\\xE1rio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleClick(0),\n        style: style.boxButton,\n        children: boxColapsed === 0 ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowUp,\n          id: props.index,\n          style: {\n            fontSize: \"30px\",\n            color: \"#363636\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faArrowRight,\n          id: props.index,\n          style: {\n            fontSize: \"30px\",\n            color: \"#363636\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), boxColapsed === 0 ? /*#__PURE__*/_jsxDEV(ExpandedRowContent, {\n        fieldList: props.fieldList,\n        fieldValues: props.fieldValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ExtendedTableRow, \"3L1l+KohUenPizqxFfM9DQ+TCnM=\");\n\n_c = ExtendedTableRow;\nconst style = {\n  container: {\n    width: \"100%\",\n    height: \"100%\",\n    flexDirection: \"row\"\n  },\n  boxWrapper: {\n    position: \"relative\",\n    backgroundColor: \"#ffa3a3\"\n  },\n  extendedLineTitle: {\n    display: \"flex\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"18px\",\n    color: \"#000000\",\n    padding: \"16px 0\"\n  },\n  boxButton: {\n    border: \"none\",\n    textDecoration: \"none\",\n    cursor: \"pointer\",\n    borderRadius: \"50%\",\n    position: \"absolute\",\n    left: \"10px\",\n    top: \"8px\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtendedTableRow\");","map":{"version":3,"sources":["C:/Users/Engenharia/Desktop/Projetos/Projeto-1/projeto1-front-end/src/components/extendedTableRow/index.jsx"],"names":["React","useState","UAParser","FontAwesomeIcon","faArrowUp","faArrowRight","ExpandedRowContent","ExtendedTableRow","props","boxColapsed","setBoxColapsed","handleClick","newIndex","currentIndex","console","log","thisUserData","fieldValues","style","container","boxWrapper","extendedLineTitle","boxButton","index","fontSize","color","fieldList","width","height","flexDirection","position","backgroundColor","display","textAlign","justifyContent","padding","border","textDecoration","cursor","borderRadius","left","top"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {UAParser} from 'ua-parser-js'; \r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowUp,faArrowRight} from '@fortawesome/free-solid-svg-icons'; \r\nimport ExpandedRowContent from '../expandedRowContent';\r\n\r\n/**\r\n * @file module:src/components/extendedTableRow/index.jsx  \r\n * @param {array} props.thisUserData - Array containing data from the user __currentAccess, currentAddress, currentJob, productsBuyed__\r\n * @returns - extended row, when click in the button will show the content of the field name clicked \r\n */\r\nexport default function ExtendedTableRow(props){  \r\n    // Variables to pass the specified content needed to custom expanded box\r\n    \r\n    // let accessData = props.thisUserData.currentAccess; \r\n    // let addressData = props.thisUserData.currentAddress; \r\n    // let jobData = props.thisUserData.currentJob; \r\n    // let productData = props.thisUserData.productsBuyed; \r\n    // let parser = new UAParser();\r\n    // let uaString = props.thisUserData.currentAccess.user_access_user_agent;\r\n    // let OS = parser.setUA(uaString).getOS();\r\n    // props.thisUserData.currentAccess.userOs = OS.name+' '+OS.version;\r\n\r\n    const [boxColapsed, setBoxColapsed] = useState(null); \r\n    \r\n    /**\r\n     * @function module:src/components/extendedTableRow/extendedTableRow~handleClick\r\n     * @summary - when the button is clicked, open only the clicked field in the device window \r\n     */\r\n    function handleClick(newIndex) {\r\n        let currentIndex = boxColapsed; \r\n        if (newIndex !== currentIndex)\r\n            currentIndex = newIndex; \r\n        else\r\n            currentIndex = null; \r\n        setBoxColapsed(currentIndex);\r\n    }\r\n\r\n\r\n\r\n    console.log(\"FIELDLIST:\",props);\r\n    console.log(\"\",props.thisUserData[props.fieldValues[0]]);\r\n    \r\n    return (   \r\n        <div style={style.container}>\r\n            <div style={style.boxWrapper}>\r\n                <h1 style={style.extendedLineTitle}>\r\n                    Acesso do Usu√°rio\r\n                </h1>\r\n                <button onClick={()=>handleClick(0)}  style={style.boxButton}>\r\n                    { (boxColapsed === 0) ? \r\n                        <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                        : \r\n                        <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                    }\r\n                </button>\r\n                { (boxColapsed === 0) ? \r\n                    <ExpandedRowContent\r\n                        fieldList = {props.fieldList\r\n                        }\r\n                        fieldValues = {props.fieldValues}\r\n                    />\r\n                    :\r\n                    null\r\n                }\r\n                {/* { (boxColapsed === 0) ? \r\n                    <ExpandedRowContent\r\n                        fieldList = {[\r\n                            {label: \"Rede\",fieldKey: \"user_access_business_technoloy\"},\r\n                            {label: \"Login\",fieldKey: \"user_access_login\"},\r\n                            {label: \"SO\",fieldKey: \"userOs\"},\r\n                            {label: \"IP\",fieldKey: \"user_access_ip_address\"}\r\n                        ]}\r\n                        fieldValues = {accessData}\r\n                    />\r\n                    :\r\n                    null\r\n                } */}\r\n            </div>\r\n            {/* <div style={style.boxWrapper}>\r\n                <h1 style={style.extendedLineTitle}>\r\n                    Endere√ßo do Usu√°rio\r\n                </h1>\r\n                <button onClick={()=>handleClick(1)}  style={style.boxButton}>\r\n                    { (boxColapsed === 1) ? \r\n                        <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                        : \r\n                        <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                    }\r\n                </button>\r\n                { (boxColapsed === 1) ? \r\n                    <ExpandedRowContent\r\n                        fieldList = {[\r\n                            {label: \"Pa√≠s\",fieldKey: \"user_address_country\"},\r\n                            {label: \"Estado\",fieldKey: \"user_address_state\"},\r\n                            {label: \"Cidade\",fieldKey: \"user_address_city\"},\r\n                            {label: \"Rua\",fieldKey: \"user_address_street_name\"},\r\n                            {label: \"Endere√ßo\",fieldKey: \"user_address_street_address\"}\r\n                        ]}\r\n                        fieldValues = {addressData}\r\n                    /> \r\n                    : \r\n                    null\r\n                }\r\n            </div>\r\n            <div style={style.boxWrapper}> \r\n                <h1 style={style.extendedLineTitle}>\r\n                    Emprego \r\n                </h1>\r\n                <button onClick={()=>handleClick(2)}  style={style.boxButton}>\r\n                    { (boxColapsed === 2)? \r\n                        <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                        : \r\n                        <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                    }\r\n                </button>\r\n                { (boxColapsed === 2)? \r\n                    <ExpandedRowContent\r\n                        fieldList = {[\r\n                            {label: \"Emprego\",fieldKey: \"user_job_title\"},\r\n                            {label: \"Endere√ßo do emprego\",fieldKey: \"user_job_address\"}\r\n                        ]}\r\n                        fieldValues = {jobData}\r\n                    /> \r\n                    : \r\n                    null\r\n                }\r\n            </div>\r\n            <div style={style.boxWrapper}> \r\n                <h1 style={style.extendedLineTitle}>\r\n                    Produto Comprado\r\n                </h1>\r\n                <button onClick={()=>handleClick(3)}  style={style.boxButton}>\r\n                    { (boxColapsed === 3) ? \r\n                        <FontAwesomeIcon icon={faArrowUp} id={props.index}  style={{fontSize:\"30px\",color:\"#363636\"}}/> \r\n                        : \r\n                        <FontAwesomeIcon icon={faArrowRight} id={props.index} style={{fontSize:\"30px\",color:\"#363636\"}}/>\r\n                    }\r\n                </button>\r\n                { (boxColapsed === 3) ? \r\n                    <ExpandedRowContent\r\n                    fieldList = {[\r\n                        {label: \"Empresa\",fieldKey: \"user_product_buyed_company_name\"},\r\n                        {label: \"Nome\",fieldKey: \"user_product_buyed_product_name\"},\r\n                        {label: \"Material\",fieldKey: \"user_product_buyed_product_material\"},\r\n                        {label: \"Descri√ß√£o\",fieldKey: \"user_product_buyed_product_description\"} \r\n                    ]}\r\n                    fieldValues = {productData}\r\n                    /> \r\n                    :\r\n                    null\r\n                }\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst style = {\r\n    container: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        flexDirection: \"row\"\r\n    },\r\n    boxWrapper:{\r\n        position: \"relative\",\r\n        backgroundColor: \"#ffa3a3\"\r\n    },\r\n    extendedLineTitle:{\r\n        display: \"flex\",\r\n        textAlign: \"center\",\r\n        justifyContent: \"center\", \r\n        fontSize : \"18px\",\r\n        color: \"#000000\",\r\n        padding: \"16px 0\"\r\n    },\r\n    boxButton:{\r\n        border: \"none\",\r\n        textDecoration: \"none\",\r\n        cursor: \"pointer\",\r\n        borderRadius: \"50%\",\r\n        position: \"absolute\",\r\n        left: \"10px\",\r\n        top: \"8px\"\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}