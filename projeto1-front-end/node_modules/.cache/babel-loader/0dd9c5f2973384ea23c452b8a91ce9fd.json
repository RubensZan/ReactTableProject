{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engenharia\\\\Desktop\\\\Projetos\\\\Projeto-1\\\\projeto1-front-end\\\\src\\\\components\\\\expandedRowContent\\\\index.jsx\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpandedRowContent(props) {\n  /**\r\n   * Function to mount the fieldList \r\n   * @param\r\n   * @returns\r\n   */\n  let oldIndex;\n\n  function mountFieldList() {\n    if (oldIndex !== props.newIndex) console.log(\"\");\n    let fieldValues = props.fieldValues;\n    console.log(props.newIndex);\n    return props.fieldList.map((field, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [field.label, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), fieldValues[field.fieldKey]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, \"extendedTableRow:\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: mountFieldList()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_c = ExpandedRowContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpandedRowContent\");","map":{"version":3,"sources":["C:/Users/Engenharia/Desktop/Projetos/Projeto-1/projeto1-front-end/src/components/expandedRowContent/index.jsx"],"names":["React","useEffect","useState","useRef","ExpandedRowContent","props","oldIndex","mountFieldList","newIndex","console","log","fieldValues","fieldList","map","field","i","label","fieldKey"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAkD,OAAlD;;AAGA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAE7C;AACJ;AACA;AACA;AACA;AACI,MAAIC,QAAJ;;AACA,WAASC,cAAT,GAAyB;AACrB,QAAID,QAAQ,KAAKD,KAAK,CAACG,QAAvB,EACIC,OAAO,CAACC,GAAR,CAAY,EAAZ;AACJ,QAAIC,WAAW,GAAGN,KAAK,CAACM,WAAxB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,QAAlB;AAEA,WACAH,KAAK,CAACO,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,KAAD,EAAQC,CAAR,KACpB;AACI,0BACI;AAAA,+BACI;AAAA,kCACI;AAAA,uBAASD,KAAK,CAACE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKL,WAAW,CAACG,KAAK,CAACG,QAAP,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAU,sBAAoBF,CAA9B;AAAA;AAAA;AAAA;AAAA,cADJ;AAOE,KATN,CADA;AAYH;;AAAA;AAED,sBACI;AAAA,cACKR,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KAjCuBH,kB","sourcesContent":["import React,{ useEffect, useState, useRef } from 'react';\r\n\r\n\r\nexport default function ExpandedRowContent(props){\r\n\r\n    /**\r\n     * Function to mount the fieldList \r\n     * @param\r\n     * @returns\r\n     */\r\n    let oldIndex; \r\n    function mountFieldList(){\r\n        if (oldIndex !== props.newIndex)\r\n            console.log(\"\");\r\n        let fieldValues = props.fieldValues;\r\n        console.log(props.newIndex);\r\n        \r\n        return (\r\n        props.fieldList.map((field, i) =>\r\n        { \r\n            return ( \r\n                <div key={\"extendedTableRow:\"+i}>\r\n                    <p >\r\n                        <strong>{field.label}: </strong>\r\n                        {fieldValues[field.fieldKey]}\r\n                    </p>\r\n                </div>\r\n            )}\r\n        ) )\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            {mountFieldList()}\r\n        </div>\r\n    )\r\n} "]},"metadata":{},"sourceType":"module"}