{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engenharia\\\\Desktop\\\\Projetos\\\\Projeto-1\\\\projeto1-front-end\\\\src\\\\components\\\\customTable\\\\index.jsx\";\nimport React, { useState } from 'react'; // import CustomAlerts from './components/customAlerts';\n\nimport TableRow from '../tableRow';\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CustomTable(props) {\n  /**\r\n   * @summary Function to mount the fieldList, with the fieldKeys\r\n   * @returns the content of the expanded row \r\n   */\n  function mountFieldList() {\n    let headerValues = props.headerValues;\n    return props.fieldList.map((field, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [field.label, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), fieldValues[field.fieldKey]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, \"extendedTableRow:\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"th\", {\n        children: \"Ola\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: \"tudo bom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = CustomTable;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTable\");","map":{"version":3,"sources":["C:/Users/Engenharia/Desktop/Projetos/Projeto-1/projeto1-front-end/src/components/customTable/index.jsx"],"names":["React","useState","TableRow","CustomTable","props","mountFieldList","headerValues","fieldList","map","field","i","label","fieldValues","fieldKey"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAEvC;AACJ;AACA;AACA;AACK,WAASC,cAAT,GAAyB;AACtB,QAAIC,YAAY,GAAGF,KAAK,CAACE,YAAzB;AACA,WACIF,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,KAAD,EAAQC,CAAR,KACpB;AAAC,0BACG;AAAA,+BACI;AAAA,kCACI;AAAA,uBAASD,KAAK,CAACE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKC,WAAW,CAACH,KAAK,CAACI,QAAP,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAU,sBAAoBH,CAA9B;AAAA;AAAA;AAAA;AAAA,cADH;AAOC,KARF,CADJ;AAUF;;AAAA;AAEF,sBACI;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;KA9BuBP,W;AA8BvB","sourcesContent":["import React, {useState } from 'react';\r\n\r\n// import CustomAlerts from './components/customAlerts';\r\nimport TableRow from '../tableRow';\r\n\r\n/**\r\n * @file module:src/components/table/index.jsx  \r\n * @param {number} props.index - Is the index of the line in the table\r\n * @returns the lines from the table, and in case of click \r\n */\r\nexport default function CustomTable(props) {\r\n\r\n    /**\r\n     * @summary Function to mount the fieldList, with the fieldKeys\r\n     * @returns the content of the expanded row \r\n     */\r\n     function mountFieldList(){\r\n        let headerValues = props.headerValues;\r\n        return (\r\n            props.fieldList.map((field, i) =>\r\n            {return ( \r\n                <div key={\"extendedTableRow:\"+i}>\r\n                    <th>\r\n                        <strong>{field.label}: </strong>\r\n                        {fieldValues[field.fieldKey]}\r\n                    </th>\r\n                </div>\r\n            )})\r\n    )};\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <th>Ola</th>\r\n            </thead>\r\n            <tbody>\r\n                <td>tudo bom</td>\r\n            </tbody>\r\n        </table>\r\n    )\r\n};"]},"metadata":{},"sourceType":"module"}