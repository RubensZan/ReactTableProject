{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Engenharia\\\\Desktop\\\\Projetos\\\\Projeto-1\\\\projeto1-front-end\\\\src\\\\components\\\\expandedRowContent\\\\index.jsx\";\nimport React, { useEffect, useState, useRef } from 'react';\n/**\r\n * @file module:src/components/expandedRowContent/index.jsx\r\n * @param {boolean} props.fieldValues - the fieldValues from the fields in the expanded row \r\n * @param {boolean} props.readOnly - case the input info is read only\r\n * @returns customized input\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExpandedRowContent(props) {\n  /**\r\n   * @summary Function to mount the fieldList \r\n   * @param\r\n   * @returns\r\n   */\n  function mountFieldList() {\n    let fieldValues = props.fieldValues;\n    return props.fieldList.map((field, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: style.extendedTableRowText,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [field.label, \": \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, this), fieldValues[field.fieldKey]]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this)\n      }, \"extendedTableRow:\" + i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: style.container,\n    children: mountFieldList()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = ExpandedRowContent;\nconst style = {\n  container: {\n    width: \"100%\",\n    flexDirection: \"row\"\n  },\n  extendedTableRowText: {\n    fontFamily: \"sanserif\",\n    fontSize: \"18px\"\n  }\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpandedRowContent\");","map":{"version":3,"sources":["C:/Users/Engenharia/Desktop/Projetos/Projeto-1/projeto1-front-end/src/components/expandedRowContent/index.jsx"],"names":["React","useEffect","useState","useRef","ExpandedRowContent","props","mountFieldList","fieldValues","fieldList","map","field","i","style","extendedTableRowText","label","fieldKey","container","width","flexDirection","fontFamily","fontSize"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,MAApC,QAAkD,OAAlD;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAkC;AAE7C;AACJ;AACA;AACA;AACA;AACI,WAASC,cAAT,GAAyB;AACrB,QAAIC,WAAW,GAAGF,KAAK,CAACE,WAAxB;AACA,WACIF,KAAK,CAACG,SAAN,CAAgBC,GAAhB,CAAoB,CAACC,KAAD,EAAQC,CAAR,KACpB;AAAC,0BACG;AAAA,+BACI;AAAG,UAAA,KAAK,EAAEC,KAAK,CAACC,oBAAhB;AAAA,kCACI;AAAA,uBAASH,KAAK,CAACI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEKP,WAAW,CAACG,KAAK,CAACK,QAAP,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,SAAU,sBAAoBJ,CAA9B;AAAA;AAAA;AAAA;AAAA,cADH;AAOC,KARF,CADJ;AAUE;;AAAA;AAEN,sBACI;AAAK,IAAA,KAAK,EAAEC,KAAK,CAACI,SAAlB;AAAA,cACKV,cAAc;AADnB;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA1BuBF,kB;AA6BxB,MAAMQ,KAAK,GAAG;AACVI,EAAAA,SAAS,EAAE;AACPC,IAAAA,KAAK,EAAE,MADA;AAEPC,IAAAA,aAAa,EAAE;AAFR,GADD;AAKVL,EAAAA,oBAAoB,EAAE;AAClBM,IAAAA,UAAU,EAAE,UADM;AAElBC,IAAAA,QAAQ,EAAE;AAFQ;AALZ,CAAd","sourcesContent":["import React,{ useEffect, useState, useRef } from 'react';\r\n\r\n/**\r\n * @file module:src/components/expandedRowContent/index.jsx\r\n * @param {boolean} props.fieldValues - the fieldValues from the fields in the expanded row \r\n * @param {boolean} props.readOnly - case the input info is read only\r\n * @returns customized input\r\n */\r\nexport default function ExpandedRowContent(props){\r\n\r\n    /**\r\n     * @summary Function to mount the fieldList \r\n     * @param\r\n     * @returns\r\n     */\r\n    function mountFieldList(){\r\n        let fieldValues = props.fieldValues;\r\n        return (\r\n            props.fieldList.map((field, i) =>\r\n            {return ( \r\n                <div key={\"extendedTableRow:\"+i}>\r\n                    <p style={style.extendedTableRowText}>\r\n                        <strong>{field.label}: </strong>\r\n                        {fieldValues[field.fieldKey]}\r\n                    </p>\r\n                </div>\r\n            )})\r\n        )};\r\n\r\n    return (\r\n        <div style={style.container}>\r\n            {mountFieldList()}\r\n        </div>\r\n    )\r\n} \r\n\r\n\r\nconst style = {\r\n    container: {\r\n        width: \"100%\",\r\n        flexDirection: \"row\"\r\n    },\r\n    extendedTableRowText: {\r\n        fontFamily: \"sanserif\",\r\n        fontSize: \"18px\"\r\n    }\r\n\r\n};"]},"metadata":{},"sourceType":"module"}